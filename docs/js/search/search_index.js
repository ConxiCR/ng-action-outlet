var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionAbstractComponentImpl.html",[0,0.158,1,0.646]],["body/interfaces/ActionAbstractComponentImpl.html",[0,0.298,1,0.895,2,0.842,3,0.519,4,0.519,5,0.451,6,0.27,7,0.451,8,1.86,9,0.591,10,0.893,11,2.626,12,0.412,13,1.817,14,2.65,15,3.441,16,3.222,17,1.007,18,2.857,19,2.857,20,0.327,21,1.128,22,1.023,23,3.441,24,0.044,25,3.222,26,0.387,27,1.136,28,2.81,29,1.75,30,0.451,31,1.406,32,1.306,33,0.681,34,0.792,35,1.462,36,0.752,37,0.752,38,2.65,39,1.406,40,1.459,41,2.481,42,1.406,43,1.462,44,1.261,45,1.462,46,1.406,47,1.75,48,2.133,49,2.857,50,2.133,51,1.05,52,2.133,53,2.133,54,2.133,55,1.462,56,1.422,57,1.86,58,1.05,59,0.591,60,1.462,61,1.05,62,0.752,63,1.05,64,0.842,65,0.752,66,2.133,67,2.133,68,2.133,69,2.133,70,0.842,71,0.022,72,0.029,73,0.022]],["title/interfaces/ActionAbstractEvent.html",[0,0.158,65,0.726]],["body/interfaces/ActionAbstractEvent.html",[0,0.298,1,0.674,2,0.85,3,0.523,4,0.523,5,0.455,6,0.272,7,0.455,8,1.877,9,0.596,10,0.796,11,2.536,12,0.413,13,1.592,14,2.213,15,2.874,16,3.236,17,0.759,18,2.152,19,2.152,20,0.33,21,1.135,22,0.957,23,2.152,24,0.043,25,2.152,26,0.39,27,1.141,28,2.506,29,1.318,30,0.455,31,1.699,32,1.318,33,0.684,34,0.796,35,1.474,36,0.759,37,0.759,38,2.659,39,1.414,40,1.462,41,2.492,42,1.414,43,1.474,44,1.268,45,1.474,46,1.414,47,1.76,48,2.152,49,2.874,50,2.152,51,1.059,52,2.152,53,2.152,54,2.152,55,1.474,56,1.633,57,2.506,58,1.414,59,0.796,60,1.969,61,1.414,62,1.013,63,1.414,64,1.135,65,1.013,66,2.874,67,2.874,68,2.874,69,2.874,70,1.135,71,0.022,72,0.03,73,0.022]],["title/interfaces/ActionAbstractOptions.html",[0,0.158,37,0.726]],["body/interfaces/ActionAbstractOptions.html",[0,0.284,1,0.622,2,0.784,3,0.482,4,0.482,5,0.419,6,0.251,7,0.419,8,1.73,9,0.55,10,0.86,11,2.476,12,0.411,13,1.528,14,2.095,15,2.72,16,2.72,17,0.699,18,1.984,19,1.984,20,0.304,21,1.074,22,1.125,23,1.984,24,0.043,25,1.984,26,0.635,27,0.959,28,2.373,29,1.215,30,0.419,31,1.339,32,1.215,33,0.656,34,0.925,35,1.864,36,0.959,37,0.959,38,2.903,39,1.779,40,1.428,41,2.945,42,1.779,43,1.864,44,1.474,45,2.288,46,1.779,47,2.213,48,2.72,49,3.34,50,2.72,51,1.339,52,2.72,53,2.72,54,2.72,55,2.288,56,1.37,57,1.73,58,0.976,59,0.55,60,1.359,61,0.976,62,0.699,63,0.976,64,0.784,65,0.699,66,1.984,67,1.984,68,1.984,69,1.984,70,0.784,71,0.02,72,0.028,73,0.02]],["title/classes/ActionButton.html",[36,0.726,74,0.814]],["body/classes/ActionButton.html",[3,0.229,4,0.229,5,0.199,6,0.318,7,0.199,9,0.75,10,0.882,11,1.35,12,0.396,13,1.669,14,0.726,20,0.144,21,0.612,22,0.793,24,0.043,26,0.665,29,0.578,30,0.532,33,0.199,34,0.793,35,0.646,36,0.804,39,1.739,40,1.469,41,2.382,42,1.605,43,1.855,44,1.365,45,1.855,46,1.758,47,1.829,51,1.567,55,1.96,59,0.75,61,1.123,62,1.15,63,1.887,64,0.995,70,0.373,71,0.01,72,0.016,73,0.01,74,1.288,75,0.823,76,1.382,77,0.943,78,1.193,79,1.814,80,1.757,81,2.495,82,1.567,83,2.671,84,2.216,85,2.216,86,0.85,87,2.153,88,4.033,89,1.193,90,3.9,91,2.671,92,2.671,93,1.971,94,2.671,95,2.671,96,2.308,97,2.308,98,2.308,99,2.308,100,2.308,101,2.671,102,2.308,103,2.308,104,2.308,105,2.308,106,2.308,107,2.308,108,2.308,109,1.814,110,1.814,111,1.814,112,1.814,113,2.95,114,2.197,115,1.814,116,1.382,117,3.029,118,1.35,119,2.308,120,1.814,121,1.94,122,1.94,123,0.823,124,1.549,125,1.35,126,3.498,127,3.82,128,1.549,129,1.35,130,2.308,131,2.216,132,2.216,133,4.555,134,1.105,135,1.105,136,1.814,137,1.814,138,1.971,139,0.762,140,1.081,141,1.105,142,2.671,143,0.823,144,1.105,145,1.105,146,1.105,147,1.105,148,1.105,149,0.726,150,0.943,151,0.943,152,1.989,153,1.105,154,1.105,155,2.308,156,1.35,157,1.814,158,1.549,159,1.814,160,2.216,161,1.105,162,2.708,163,1.814,164,1.814,165,1.105,166,1.105,167,1.989,168,1.105,169,1.105,170,1.814,171,1.814,172,1.105,173,1.105,174,2.898,175,1.105,176,0.943,177,1.549,178,0.578,179,1.105,180,0.943,181,0.943,182,0.943,183,1.549,184,1.105,185,1.105,186,1.105,187,0.373,188,1.105,189,1.105,190,1.105,191,1.814,192,1.105,193,2.495,194,1.96,195,1.105,196,1.105,197,1.105,198,1.105,199,1.105,200,1.105,201,1.105,202,1.105,203,1.105,204,1.105,205,1.105,206,2.671,207,1.105,208,1.105,209,1.105,210,1.105,211,1.105,212,1.105,213,1.105,214,1.105,215,1.105,216,1.549,217,0.943,218,1.105,219,2.519,220,0.578,221,0.943,222,0.943,223,1.105,224,1.105,225,0.646,226,0.726,227,0.943,228,0.518,229,1.971,230,1.989,231,1.105,232,1.193,233,1.105,234,1.814,235,1.35,236,0.823,237,1.105,238,1.105,239,1.105,240,1.105,241,1.105,242,1.105,243,1.105,244,1.105,245,1.35,246,0.646]],["title/interfaces/ActionButtonEvent.html",[0,0.158,226,1.586]],["body/interfaces/ActionButtonEvent.html",[0,0.277,1,0.972,2,0.955,3,0.588,4,0.588,5,0.511,6,0.306,7,0.511,9,0.67,10,0.67,12,0.386,17,0.853,20,0.37,21,1.353,22,0.67,24,0.043,26,0.655,27,1.094,30,0.656,33,0.764,34,0.859,37,1.094,40,1.225,51,1.19,56,1.648,59,0.67,62,1.274,63,1.19,64,1.225,65,1.208,70,1.225,71,0.025,72,0.032,73,0.025,74,1.594,76,1.327,86,1.879,116,1.327,139,1.19,140,1.327,225,1.657,226,2.638,247,2.109,248,2.125,249,2.125,250,2.125,251,1.327,252,1.862,253,1.862,254,2.097,255,3.102,256,1.862,257,1.657,258,2.109,259,2.109,260,2.109]],["title/interfaces/ActionButtonOptions.html",[0,0.158,116,1.13]],["body/interfaces/ActionButtonOptions.html",[0,0.261,1,0.964,2,0.942,3,0.58,4,0.58,5,0.504,6,0.302,7,0.504,9,0.661,10,0.852,12,0.344,17,0.841,20,0.365,21,1.42,22,0.996,24,0.043,26,0.652,27,0.841,30,0.65,33,0.76,34,0.996,37,1.2,40,1.215,51,1.174,56,1.502,59,0.661,62,1.267,63,1.514,64,0.942,65,1.084,70,1.42,71,0.025,72,0.032,73,0.025,74,1.551,76,1.309,86,1.867,116,1.688,139,1.174,140,1.688,225,1.635,226,2.368,247,2.081,248,1.635,249,1.635,250,1.635,251,1.309,252,1.837,253,1.837,254,2.373,255,3.595,256,1.837,257,2.107,258,2.682,259,2.682,260,2.682]],["title/interfaces/ActionGroupEvent.html",[0,0.158,261,1.796]],["body/interfaces/ActionGroupEvent.html",[0,0.277,1,0.971,2,0.953,3,0.587,4,0.587,5,0.51,6,0.305,7,0.51,9,0.669,10,0.669,12,0.392,17,0.851,20,0.37,21,1.352,22,0.669,24,0.043,26,0.621,27,1.092,30,0.723,31,1.188,32,1.478,33,0.723,34,0.858,37,1.092,40,1.352,46,1.525,56,1.593,58,1.188,59,0.669,62,1.092,64,1.224,65,1.206,70,1.224,71,0.025,72,0.032,73,0.025,86,1.878,139,1.188,140,1.324,187,1.583,193,2.105,194,1.654,248,2.123,249,2.123,250,2.123,251,1.324,257,1.654,261,2.702,262,1.478,263,2.105,264,2.123,265,1.859,266,1.478,267,2.414,268,2.827,269,2.702,270,2.827,271,2.414,272,2.414,273,2.702]],["title/interfaces/ActionGroupOptions.html",[0,0.158,266,1.261]],["body/interfaces/ActionGroupOptions.html",[0,0.258,1,0.949,2,0.919,3,0.566,4,0.566,5,0.492,6,0.294,7,0.492,9,0.645,10,0.839,12,0.359,17,0.821,20,0.357,21,1.407,22,0.987,24,0.043,26,0.646,27,0.821,30,0.711,31,1.146,32,1.426,33,0.711,34,0.987,37,1.186,40,1.328,46,1.817,56,1.336,58,1.49,59,0.645,62,0.821,64,0.919,65,1.067,70,1.407,71,0.024,72,0.031,73,0.024,86,1.846,139,1.146,140,1.661,187,1.522,193,2.64,194,2.074,248,1.595,249,1.595,250,1.595,251,1.277,257,2.074,261,2.031,262,1.426,263,2.031,264,2.305,265,1.793,266,1.854,267,3.027,268,3.545,269,3.301,270,3.939,271,3.027,272,3.027,273,3.301]],["title/interfaces/ActionOutlet.html",[0,0.158,274,1.411]],["body/interfaces/ActionOutlet.html",[0,0.222,2,0.688,3,0.424,4,0.424,5,0.368,6,0.399,7,0.525,9,0.874,10,0.688,12,0.375,13,2.005,20,0.267,22,0.802,24,0.043,26,0.718,27,1.223,30,0.785,31,1.223,33,0.525,34,1.107,37,0.614,51,0.858,65,0.614,71,0.018,72,0.026,73,0.018,74,1.467,75,2.167,76,1.363,78,2.671,82,1.707,87,1.363,89,1.913,116,1.732,117,2.23,121,2.23,122,2.23,123,3.025,149,1.913,174,2.23,187,1.506,217,3.65,220,1.067,225,1.194,227,1.743,228,2.202,232,2.671,246,2.377,251,0.956,262,1.522,264,1.194,265,1.342,266,1.933,274,2.163,275,1.743,276,2.91,277,1.913,278,2.91,279,2.91,280,2.91,281,2.91,282,2.494,283,3.85,284,2.91,285,2.494,286,2.91,287,1.732,288,2.494,289,1.467,290,2.041,291,1.194,292,1.363,293,1.743,294,1.194,295,2.041,296,1.743,297,1.743]],["title/directives/ActionOutletDirective.html",[178,1.261,298,1.586]],["body/directives/ActionOutletDirective.html",[1,0.371,3,0.288,4,0.288,5,0.25,6,0.396,7,0.393,9,0.636,10,0.328,11,1.274,12,0.413,13,1.924,17,0.655,20,0.181,22,0.636,24,0.044,26,0.632,27,1.057,28,2.914,29,1.406,30,0.55,31,1.599,32,0.725,33,0.25,36,0.809,39,1.28,42,1.28,44,0.522,51,0.915,57,1.622,58,1.28,59,1.007,60,0.811,61,1.476,71,0.012,72,0.019,73,0.012,74,1.239,80,1.432,81,1.622,82,1.391,87,1.02,89,1.432,93,1.184,114,2.616,117,2.31,121,1.768,122,1.768,143,2.002,149,2.176,152,1.622,158,2.601,162,1.859,167,2.268,174,1.768,176,1.859,177,3.248,178,1.139,180,1.859,182,3.77,183,3.137,187,1.239,194,1.274,220,0.725,228,0.65,230,2.002,232,2.003,236,2.002,246,1.936,251,0.65,254,1.139,256,1.432,264,1.274,269,1.622,274,2.226,276,2.177,289,0.734,294,1.274,298,2.416,299,1.694,300,1.387,301,2.66,302,2.66,303,2.66,304,2.66,305,4.044,306,2.66,307,2.66,308,3.285,309,3.912,310,3.513,311,2.66,312,2.177,313,2.177,314,2.177,315,1.859,316,3.285,317,1.694,318,2.66,319,2.66,320,2.66,321,3.285,322,2.66,323,1.694,324,4.488,325,4.648,326,1.694,327,2.177,328,2.66,329,2.66,330,2.66,331,2.66,332,2.66,333,2.66,334,2.66,335,3.285,336,2.688,337,3.721,338,3.285,339,3.721,340,3.285,341,3.285,342,3.285,343,3.285,344,3.285,345,1.622,346,1.694,347,2.66,348,2.66,349,2.66,350,2.66,351,2.66,352,2.66,353,2.66,354,1.694,355,4.044,356,3.721,357,2.66,358,2.66,359,1.694,360,1.694,361,2.66,362,3.285,363,1.694,364,3.285,365,1.694,366,1.694,367,3.721,368,2.66,369,4.488,370,2.66,371,1.694,372,1.694,373,1.694,374,1.694,375,1.694,376,1.694,377,1.694,378,1.694,379,1.694,380,1.694,381,1.694,382,4.044,383,1.694,384,1.694,385,2.66,386,1.694,387,1.694,388,1.694,389,1.694,390,1.694,391,1.694]],["title/injectables/ActionOutletFactory.html",[277,1.586,392,1.796]],["body/injectables/ActionOutletFactory.html",[3,0.357,4,0.357,5,0.31,6,0.368,9,0.806,12,0.359,13,1.985,20,0.225,22,0.726,24,0.044,26,0.682,27,1.151,30,0.735,32,0.898,33,0.31,34,1.081,36,0.517,39,1.712,42,1.431,51,1.29,58,1.078,71,0.015,72,0.023,73,0.015,74,1.451,76,1.202,78,2.678,80,2.678,81,3.157,82,1.808,83,2.565,89,1.687,116,1.596,117,2.019,121,2.019,122,2.019,123,2.847,174,2.019,181,2.19,187,1.404,216,2.622,220,0.898,225,1.005,227,1.466,228,2.141,230,2.714,232,2.514,246,2.436,254,1.341,262,1.341,264,1.796,265,1.129,266,1.781,273,1.91,274,1.501,277,2.24,278,3.07,279,3.07,280,3.07,281,2.565,283,3.721,284,2.565,286,2.565,287,1.596,289,1.404,290,1.717,291,1.005,292,1.202,293,1.466,294,1.796,296,2.19,310,2.565,313,2.565,315,1.466,336,2.565,345,2.536,392,1.91,393,2.098,394,1.717,395,3.134,396,3.134,397,2.565,398,3.134,399,3.134,400,3.134,401,2.19,402,3.134,403,4.161,404,3.134,405,3.134,406,3.134,407,3.134,408,2.098,409,3.134,410,2.098,411,2.565,412,2.098,413,3.134,414,1.687,415,2.098,416,2.098,417,2.098,418,2.098,419,2.098]],["title/modules/ActionOutletModule.html",[420,1.796,421,1.586]],["body/modules/ActionOutletModule.html",[3,0.676,4,0.676,5,0.587,6,0.351,12,0.281,24,0.043,30,0.771,33,0.587,36,0.98,71,0.029,72,0.035,73,0.029,178,2.531,220,1.702,420,2.424,421,3.086,422,2.779,423,2.424,424,3.255,425,4.273,426,3.255,427,2.779,428,4.273,429,3.255,430,3.255,431,3.255,432,3.963,433,3.255,434,2.779,435,3.977,436,3.963,437,4.842,438,3.255,439,3.977,440,3.255]],["title/classes/ActionToggle.html",[36,0.726,289,0.814]],["body/classes/ActionToggle.html",[3,0.198,4,0.198,5,0.172,6,0.369,7,0.172,9,0.697,10,0.837,11,1.214,12,0.392,13,1.597,14,0.626,20,0.124,21,0.54,22,0.741,24,0.043,26,0.645,29,0.498,30,0.49,33,0.172,34,0.741,35,0.557,36,0.733,39,1.565,40,1.428,41,2.25,42,1.528,43,1.722,44,1.458,45,1.722,46,1.815,47,1.719,55,1.832,59,0.643,61,1.023,62,1.03,63,1.844,64,0.54,70,0.321,71,0.008,72,0.014,73,0.008,75,0.709,78,1.054,80,2.449,81,2.708,82,1.486,86,0.751,87,2.112,88,3.87,89,1.054,90,3.422,91,2.434,92,2.434,93,1.772,94,2.434,95,2.434,96,2.075,97,2.075,98,2.075,99,2.075,100,2.075,101,2.434,102,2.075,103,2.075,104,2.075,105,2.075,106,2.075,107,2.075,108,2.075,109,1.602,110,1.602,111,1.602,112,1.602,113,2.717,114,2.023,115,1.602,117,3.006,119,2.075,120,1.602,121,1.786,122,1.786,123,0.709,124,1.368,126,3.289,127,3.636,128,1.368,130,2.075,133,4.463,134,0.952,135,0.952,136,1.602,137,2.075,138,1.772,139,0.673,140,0.972,141,0.952,142,2.434,143,1.545,144,0.952,145,0.952,146,0.952,147,0.952,148,0.952,149,1.365,150,0.813,151,0.813,152,1.813,153,0.952,154,0.952,155,2.075,157,1.602,158,1.368,159,1.602,161,0.952,162,2.922,163,1.602,164,2.944,165,0.952,166,0.952,167,2.449,168,0.952,169,0.952,170,1.602,171,1.602,172,0.952,173,0.952,174,2.911,175,0.952,176,0.813,177,1.368,178,0.498,179,0.952,180,0.813,181,0.813,182,0.813,183,1.368,184,0.952,185,0.952,186,0.952,187,0.321,188,0.952,189,0.952,190,0.952,191,1.602,192,0.952,193,2.708,194,2.127,195,0.952,196,0.952,197,0.952,198,0.952,199,0.952,200,0.952,201,0.952,202,0.952,203,0.952,204,0.952,205,0.952,206,2.075,207,0.952,208,0.952,209,0.952,210,0.952,211,0.952,212,0.952,213,0.952,214,0.952,215,0.952,216,2.32,217,0.813,218,0.952,219,0.813,220,0.498,221,0.813,222,0.813,223,0.952,224,0.952,228,0.446,230,2.449,231,0.952,232,1.054,233,0.952,234,1.602,236,1.545,237,0.952,238,0.952,239,0.952,240,0.952,241,0.952,242,0.952,243,0.952,244,0.952,246,1.589,287,1.273,289,1.226,291,0.557,292,1.603,293,0.813,294,2.179,327,1.602,345,2.193,414,2.784,441,0.813,442,1.958,443,1.958,444,1.958,445,1.958,446,1.958,447,2.717,448,3.826,449,3.597,450,3.319,451,1.163,452,1.163,453,1.163,454,1.163,455,2.975,456,2.975,457,2.975,458,2.975,459,1.958,460,1.163,461,1.958,462,1.163,463,2.975,464,1.958,465,1.163,466,1.958,467,1.163,468,1.958,469,2.536,470,0.626,471,1.772,472,1.163,473,1.163,474,1.163,475,1.163,476,1.163,477,1.163,478,1.163,479,1.163,480,1.958]],["title/interfaces/ActionToggleEvent.html",[0,0.158,470,1.586]],["body/interfaces/ActionToggleEvent.html",[0,0.271,1,0.936,2,0.901,3,0.555,4,0.555,5,0.482,6,0.288,7,0.482,9,0.632,10,0.632,12,0.393,17,0.804,20,0.349,21,1.315,22,0.828,24,0.043,26,0.665,27,1.053,30,0.631,33,0.747,34,0.828,37,1.053,38,1.757,40,1.396,44,1.47,46,1.739,56,1.618,59,0.632,62,1.246,63,1.123,64,1.18,65,1.174,70,1.18,71,0.023,72,0.031,73,0.023,82,1.47,86,1.828,139,1.123,140,1.252,248,2.047,249,2.047,250,2.047,251,1.252,252,1.757,253,1.757,254,2.04,256,1.757,257,1.563,258,1.99,259,1.99,260,1.99,287,1.252,289,1.58,291,1.563,292,1.252,294,1.563,414,2.996,470,2.565,481,1.99,482,2.987]],["title/interfaces/ActionToggleOptions.html",[0,0.158,287,1.13]],["body/interfaces/ActionToggleOptions.html",[0,0.253,1,0.926,2,0.886,3,0.546,4,0.546,5,0.474,6,0.284,7,0.474,9,0.622,10,0.819,12,0.354,17,0.791,20,0.344,21,1.387,22,1.074,24,0.043,26,0.662,27,0.791,30,0.625,33,0.742,34,0.973,37,1.165,38,2.276,40,1.387,44,1.458,46,1.728,56,1.458,59,0.622,62,1.238,63,1.454,64,0.886,65,1.042,70,1.387,71,0.023,72,0.03,73,0.023,82,1.105,86,1.813,139,1.105,140,1.622,248,1.538,249,1.538,250,1.538,251,1.231,252,1.728,253,1.728,254,2.339,256,1.728,257,2.025,258,2.578,259,2.578,260,2.578,287,1.622,289,1.531,291,1.538,292,1.231,294,1.538,414,2.985,470,2.276,481,1.957,482,3.511]],["title/coverage.html",[483,3.268]],["body/coverage.html",[0,0.304,1,0.705,5,0.475,6,0.524,7,0.772,8,2.884,24,0.043,26,0.408,36,1.239,37,0.793,65,0.793,71,0.023,72,0.03,73,0.023,74,0.888,76,1.928,77,2.959,82,1.107,87,1.234,116,1.234,178,1.377,187,0.888,226,1.732,229,2.248,247,2.581,261,1.961,262,2.236,263,2.581,266,1.377,274,1.54,275,2.248,277,1.732,287,1.234,289,0.888,292,1.928,298,1.732,300,2.633,392,1.961,394,2.633,441,2.959,470,1.732,471,2.248,481,2.581,483,2.633,484,2.633,485,3.217,486,3.217,487,5.929,488,5.224,489,3.217,490,2.959,491,3.217,492,5.224,493,2.633,494,5.224,495,3.217,496,4.732,497,3.873,498,3.217,499,2.633,500,2.633,501,3.217,502,4.234,503,3.217,504,3.217,505,3.217]],["title/dependencies.html",[423,2.156,506,2.476]],["body/dependencies.html",[24,0.043,71,0.03,72,0.036,73,0.03,220,1.802,222,2.943,423,2.567,438,3.447,507,4.211,508,5.846,509,4.211,510,5.012,511,4.211,512,4.211,513,4.211,514,5.012,515,4.102,516,3.447,517,4.211,518,4.211,519,4.211,520,4.211,521,4.211,522,4.211]],["title/miscellaneous/enumerations.html",[523,1.185,524,2.895]],["body/miscellaneous/enumerations.html",[6,0.395,7,0.661,12,0.316,20,0.479,24,0.037,44,1.38,71,0.032,72,0.037,73,0.032,150,3.63,151,3.63,152,3.166,490,3.63,523,2.143,524,3.662,525,5.194,526,3.127]],["title/index.html",[20,0.265,527,1.73,528,1.73]],["body/index.html",[12,0.402,13,1.781,17,0.644,24,0.043,29,1.119,30,0.804,33,0.681,36,1.324,39,1.264,42,0.899,43,1.252,44,0.806,47,1.119,58,1.781,59,0.506,60,1.252,61,0.899,71,0.019,72,0.026,73,0.019,74,1.174,78,2.288,79,2.14,80,2.482,87,1.003,124,1.827,138,2.569,143,2.811,149,1.978,167,1.594,187,1.273,228,1.41,264,1.252,271,1.827,272,1.827,274,2.036,277,1.978,283,2.569,289,1.342,297,1.827,298,1.407,309,2.14,312,2.14,314,2.14,315,1.827,397,3.009,401,3.397,411,2.14,420,1.594,421,2.616,427,2.971,436,3.48,440,3.009,447,2.14,516,2.14,527,1.827,528,1.827,529,2.615,530,2.615,531,4.86,532,2.615,533,2.615,534,2.615,535,3.676,536,2.615,537,2.615,538,2.615,539,2.615,540,2.14,541,2.615,542,2.615,543,2.615,544,2.615,545,3.676,546,2.14,547,2.615,548,2.615,549,2.615,550,2.615,551,2.615,552,2.615,553,3.676,554,3.009,555,3.676,556,2.615,557,5.041,558,3.676,559,5.178,560,4.252,561,4.252,562,4.252,563,2.615,564,2.615,565,2.615,566,2.615,567,2.615,568,2.615,569,5.041,570,2.615,571,3.676,572,2.615,573,2.615,574,2.615,575,2.615,576,3.676,577,2.615,578,3.676,579,2.615,580,3.676,581,2.615,582,4.613,583,2.14,584,2.615,585,2.615,586,2.615,587,2.615,588,2.615,589,2.615,590,3.676,591,2.615,592,3.676,593,2.615,594,2.615,595,2.615,596,2.615,597,2.615,598,2.615,599,2.615,600,2.615,601,2.615,602,2.615,603,2.615,604,2.615,605,2.615]],["title/license.html",[527,1.73,528,1.73,606,2.026]],["body/license.html",[12,0.266,24,0.034,56,1.162,61,1.296,71,0.027,72,0.034,73,0.027,128,2.633,194,1.804,219,2.633,221,2.633,401,3.273,434,2.633,484,3.083,540,3.083,546,3.083,606,3.083,607,3.767,608,5.097,609,3.767,610,3.767,611,3.767,612,3.767,613,4.684,614,3.767,615,3.767,616,3.767,617,3.767,618,3.767,619,4.684,620,5.777,621,3.767,622,3.767,623,3.767,624,5.097,625,3.767,626,4.684,627,3.767,628,3.767,629,3.767,630,3.767,631,3.767,632,3.767,633,3.767,634,3.767,635,4.684,636,3.767,637,3.767,638,3.767,639,3.767,640,3.767,641,4.684,642,4.684,643,3.767,644,3.767,645,3.767,646,3.767,647,3.767,648,3.767,649,3.767,650,3.767,651,3.767,652,3.767,653,3.767,654,3.767,655,3.767,656,3.767,657,3.767,658,3.767,659,3.767,660,3.767,661,3.767,662,3.767,663,3.767,664,3.767,665,3.767,666,3.767,667,3.767]],["title/modules.html",[422,2.791]],["body/modules.html",[24,0.038,71,0.033,72,0.038,73,0.033,421,2.483,422,3.224,515,3.776,668,4.614,669,4.614,670,4.614]],["title/overview.html",[671,3.268]],["body/overview.html",[2,1.173,24,0.04,71,0.031,72,0.036,73,0.031,75,2.591,178,2.487,298,2.288,392,2.591,420,3.072,421,3.053,423,2.591,424,3.479,425,3.479,426,3.479,427,2.971,428,3.479,429,3.479,430,3.479,431,3.479,432,4.125,433,3.479,434,2.971,554,4.397,583,3.479,671,3.479,672,4.251]],["title/miscellaneous/typealiases.html",[523,1.185,673,3.537]],["body/miscellaneous/typealiases.html",[1,1.131,6,0.476,10,0.752,12,0.274,17,1.273,20,0.415,24,0.034,26,0.714,31,1.777,59,1,62,1.175,71,0.028,72,0.034,73,0.028,74,1.317,76,1.488,87,1.488,139,1.777,187,1.071,225,2.284,228,1.488,247,3.149,252,2.568,253,2.568,254,2.042,255,3.334,262,1.661,263,2.908,265,2.568,275,3.334,289,1.317,291,2.284,292,1.488,295,3.177,296,2.713,297,2.713,481,3.149,482,3.334,523,1.859,526,3.935,674,3.882,675,4.771]],["title/miscellaneous/variables.html",[523,1.185,676,2.895]],["body/miscellaneous/variables.html",[6,0.458,7,0.514,12,0.365,20,0.373,24,0.043,26,0.657,31,1.197,34,1.092,35,2.481,39,1.197,42,1.197,45,1.667,47,1.49,55,1.667,58,1.532,60,2.564,61,1.782,71,0.025,72,0.032,73,0.025,74,0.961,76,1.335,77,3.114,82,1.197,87,1.335,114,3.158,116,1.335,187,0.961,228,2.184,229,3.114,236,2.995,246,1.667,262,1.49,266,1.49,267,2.432,269,2.716,273,2.122,287,1.335,289,0.961,292,1.335,345,2.122,414,1.873,441,3.114,471,3.114,490,3.114,493,3.647,497,4.022,499,3.647,500,4.022,523,1.667,526,3.743,676,2.849,677,3.481,678,3.481,679,3.481,680,3.481,681,3.481]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.10.2",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":554,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/1",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":672,"title":{},"body":{"overview.html":{}}}],["10.0.6",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":555,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":610,"title":{},"body":{"license.html":{}}}],["3",{"_index":572,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["34/34",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["37/37",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":583,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4/4",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["41/41",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":593,"title":{},"body":{"index.html":{}}}],["5/5",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":601,"title":{},"body":{"index.html":{}}}],["6.6.0",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["60/60",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["_action",{"_index":23,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["above",{"_index":640,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["abstract.model",{"_index":251,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["abstract.model.ts",{"_index":8,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"coverage.html":{}}}],["abstract.ts",{"_index":490,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstract/action",{"_index":7,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstractaction",{"_index":308,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accessed",{"_index":595,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":322,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accordingly",{"_index":343,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["action",{"_index":12,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action.getforcedcomponent",{"_index":390,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionabstract",{"_index":87,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionabstract:104",{"_index":154,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:108",{"_index":145,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:113",{"_index":148,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:117",{"_index":134,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:123",{"_index":146,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:129",{"_index":135,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:224",{"_index":215,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:276",{"_index":161,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:289",{"_index":165,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:302",{"_index":166,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:311",{"_index":192,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:318",{"_index":201,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:325",{"_index":196,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:334",{"_index":210,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:342",{"_index":188,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:351",{"_index":205,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:359",{"_index":173,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:368",{"_index":208,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:376",{"_index":184,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:383",{"_index":214,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:391",{"_index":189,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:401",{"_index":212,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:409",{"_index":203,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:416",{"_index":200,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:423",{"_index":172,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:431",{"_index":169,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:439",{"_index":198,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:446",{"_index":199,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:455",{"_index":175,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:462",{"_index":185,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:95",{"_index":153,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:99",{"_index":147,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstractcomponentimpl",{"_index":1,"title":{"interfaces/ActionAbstractComponentImpl.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionabstractevent",{"_index":65,"title":{"interfaces/ActionAbstractEvent.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionabstractoptions",{"_index":37,"title":{"interfaces/ActionAbstractOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionbutton",{"_index":74,"title":{"classes/ActionButton.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionbutton(options",{"_index":417,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actionbuttoncallback",{"_index":255,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttoncomponentimpl",{"_index":225,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttonevent",{"_index":226,"title":{"interfaces/ActionButtonEvent.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{}}}],["actionbuttonoptions",{"_index":116,"title":{"interfaces/ActionButtonOptions.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionfactory.createbutton",{"_index":84,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createbutton().settitle('test",{"_index":85,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createtoggle",{"_index":445,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actionfactory.createtoggle().check",{"_index":446,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actiongroup",{"_index":187,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(options",{"_index":418,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiongroupcomponentimpl",{"_index":265,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actiongroupevent",{"_index":261,"title":{"interfaces/ActionGroupEvent.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{}}}],["actiongroupoptions",{"_index":266,"title":{"interfaces/ActionGroupOptions.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionoutlet",{"_index":274,"title":{"interfaces/ActionOutlet.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutlet(action",{"_index":366,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdestroy",{"_index":321,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdirective",{"_index":178,"title":{"directives/ActionOutletDirective.html":{}},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"overview.html":{}}}],["actionoutletfactory",{"_index":277,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutletmodule",{"_index":421,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["actions",{"_index":58,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actionstate",{"_index":525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionstate.active",{"_index":195,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.destroyed",{"_index":197,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.inactive",{"_index":202,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actiontoggle",{"_index":289,"title":{"classes/ActionToggle.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiontoggle(options",{"_index":419,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiontogglecallback",{"_index":482,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontogglecomponentimpl",{"_index":291,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontoggleevent",{"_index":470,"title":{"interfaces/ActionToggleEvent.html":{}},"body":{"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actiontoggleoptions",{"_index":287,"title":{"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activate",{"_index":91,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["active",{"_index":150,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["actually",{"_index":588,"title":{},"body":{"index.html":{}}}],["add",{"_index":570,"title":{},"body":{"index.html":{}}}],["added",{"_index":50,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["advanced",{"_index":556,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":674,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":164,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["always",{"_index":307,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["and/or",{"_index":633,"title":{},"body":{"license.html":{}}}],["angular",{"_index":29,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["angular/animations",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":438,"title":{},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":220,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["anyaction",{"_index":31,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":533,"title":{},"body":{"index.html":{}}}],["application",{"_index":549,"title":{},"body":{"index.html":{}}}],["approach",{"_index":402,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["appropriate",{"_index":567,"title":{},"body":{"index.html":{}}}],["aria",{"_index":48,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["aria/#aria",{"_index":54,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["arialabel",{"_index":55,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["arising",{"_index":665,"title":{},"body":{"license.html":{}}}],["array",{"_index":267,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"miscellaneous/variables.html":{}}}],["array.from",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assigned",{"_index":356,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["associate",{"_index":575,"title":{},"body":{"index.html":{}}}],["associated",{"_index":621,"title":{},"body":{"license.html":{}}}],["attaches",{"_index":304,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["authors",{"_index":656,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":349,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["available",{"_index":604,"title":{},"body":{"index.html":{}}}],["back",{"_index":544,"title":{},"body":{"index.html":{}}}],["based",{"_index":551,"title":{},"body":{"index.html":{}}}],["basic",{"_index":79,"title":{},"body":{"classes/ActionButton.html":{},"index.html":{}}}],["behaviorsubject",{"_index":469,"title":{},"body":{"classes/ActionToggle.html":{}}}],["behaviorsubject(!!this.options.checked",{"_index":472,"title":{},"body":{"classes/ActionToggle.html":{}}}],["between",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bind",{"_index":602,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":46,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["bootstrap",{"_index":426,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["browse",{"_index":670,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":515,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":534,"title":{},"body":{"index.html":{}}}],["button",{"_index":51,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.component",{"_index":577,"title":{},"body":{"index.html":{}}}],["button.model",{"_index":227,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model.ts",{"_index":247,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["button.trigger",{"_index":160,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts",{"_index":77,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.ts:42",{"_index":129,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:47",{"_index":125,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:52",{"_index":118,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:90",{"_index":156,"title":{},"body":{"classes/ActionButton.html":{}}}],["button/action",{"_index":76,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonaction",{"_index":403,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["c",{"_index":609,"title":{},"body":{"license.html":{}}}],["callback",{"_index":254,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callbackmethod",{"_index":313,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["called",{"_index":157,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["case",{"_index":543,"title":{},"body":{"index.html":{}}}],["change",{"_index":143,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["change/update",{"_index":342,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["changes",{"_index":88,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["charge",{"_index":546,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":447,"title":{},"body":{"classes/ActionToggle.html":{},"index.html":{}}}],["checkbox",{"_index":443,"title":{},"body":{"classes/ActionToggle.html":{}}}],["checkbox.component",{"_index":591,"title":{},"body":{"index.html":{}}}],["checked",{"_index":414,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":57,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["children",{"_index":269,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":659,"title":{},"body":{"license.html":{}}}],["class",{"_index":36,"title":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":75,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"classes/ActionToggle.html":{},"overview.html":{}}}],["clean",{"_index":400,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["clear",{"_index":387,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["click",{"_index":159,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["cluster_actionoutletmodule",{"_index":429,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_declarations",{"_index":430,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_exports",{"_index":431,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["code",{"_index":399,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["combination",{"_index":218,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["coming",{"_index":250,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["command",{"_index":563,"title":{},"body":{"index.html":{}}}],["comming",{"_index":67,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["commonmodule",{"_index":437,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["compile",{"_index":341,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["compiles",{"_index":303,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["complete",{"_index":168,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["component",{"_index":13,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["component's",{"_index":338,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactory",{"_index":376,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":325,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentref",{"_index":364,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["components",{"_index":17,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["conditions",{"_index":639,"title":{},"body":{"license.html":{}}}],["connection",{"_index":666,"title":{},"body":{"license.html":{}}}],["const",{"_index":81,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["constructor",{"_index":114,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["constructor(options",{"_index":115,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["constructor(private",{"_index":597,"title":{},"body":{"index.html":{}}}],["constructor(viewcontainerref",{"_index":323,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["container",{"_index":339,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["containing",{"_index":268,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["contract",{"_index":662,"title":{},"body":{"license.html":{}}}],["copies",{"_index":635,"title":{},"body":{"license.html":{}}}],["copy",{"_index":619,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":608,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":483,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":78,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["createbutton",{"_index":278,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createbutton(options",{"_index":281,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createcomponent",{"_index":331,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["created",{"_index":272,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["creategroup",{"_index":279,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creategroup(options",{"_index":284,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle",{"_index":280,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle(options",{"_index":286,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creation",{"_index":330,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["current",{"_index":162,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["custom",{"_index":124,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["damages",{"_index":660,"title":{},"body":{"license.html":{}}}],["deactivate",{"_index":92,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["deal",{"_index":623,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":667,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":425,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["default",{"_index":228,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default's",{"_index":584,"title":{},"body":{"index.html":{}}}],["defaultabstractoptions",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultbuttonoptions",{"_index":229,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroupoptions",{"_index":499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttoggleoptions",{"_index":471,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":297,"title":{},"body":{"interfaces/ActionOutlet.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":117,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["defines",{"_index":347,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["defining",{"_index":193,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{}}}],["demo",{"_index":553,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":423,"title":{"dependencies.html":{}},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":328,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["depending",{"_index":213,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["derived",{"_index":11,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["descendant",{"_index":311,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["destroy",{"_index":93,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["destroyed",{"_index":152,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["destruction",{"_index":350,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["detection",{"_index":344,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dinamically",{"_index":305,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directive",{"_index":298,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":299,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directly",{"_index":355,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["disable",{"_index":94,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["disabled",{"_index":47,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distribute",{"_index":631,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":484,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doen",{"_index":144,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["dom",{"_index":180,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["dropdown",{"_index":273,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":516,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e.g",{"_index":149,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["each",{"_index":138,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["easy",{"_index":532,"title":{},"body":{"index.html":{}}}],["element",{"_index":52,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["enable",{"_index":95,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["enabled",{"_index":171,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["end",{"_index":545,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":524,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('illegal",{"_index":373,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["etc",{"_index":340,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["event",{"_index":56,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"license.html":{}}}],["example",{"_index":80,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["examplebuttoncomponent",{"_index":576,"title":{},"body":{"index.html":{}}}],["examplecheckboxcomponent",{"_index":590,"title":{},"body":{"index.html":{}}}],["examplecomponent",{"_index":592,"title":{},"body":{"index.html":{}}}],["examplegroupcomponent",{"_index":578,"title":{},"body":{"index.html":{}}}],["examplemodule",{"_index":571,"title":{},"body":{"index.html":{}}}],["exampletogglecomponent",{"_index":580,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["exports",{"_index":428,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["exposed",{"_index":384,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["express",{"_index":648,"title":{},"body":{"license.html":{}}}],["extend",{"_index":16,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["extended",{"_index":35,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["extending",{"_index":257,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["extends",{"_index":86,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["factory",{"_index":276,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["false",{"_index":236,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["false).pipe",{"_index":474,"title":{},"body":{"classes/ActionToggle.html":{}}}],["fetch",{"_index":357,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["files",{"_index":622,"title":{},"body":{"license.html":{}}}],["fire",{"_index":62,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fire$.subscribe(callbackmethod",{"_index":407,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["first",{"_index":259,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["fitness",{"_index":653,"title":{},"body":{"license.html":{}}}],["fly",{"_index":306,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["following",{"_index":128,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["forced",{"_index":176,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["free",{"_index":616,"title":{},"body":{"license.html":{}}}],["front",{"_index":548,"title":{},"body":{"index.html":{}}}],["function",{"_index":675,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["functional",{"_index":396,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["functionality",{"_index":442,"title":{},"body":{"classes/ActionToggle.html":{}}}],["furnished",{"_index":638,"title":{},"body":{"license.html":{}}}],["getactionoutlet",{"_index":359,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getarialabel",{"_index":96,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getcomponenttype",{"_index":319,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype(action",{"_index":353,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getforcedcomponent",{"_index":97,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["geticon",{"_index":98,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getparent",{"_index":99,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getter",{"_index":361,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getting",{"_index":527,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettitle",{"_index":100,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["goal",{"_index":530,"title":{},"body":{"index.html":{}}}],["granted",{"_index":615,"title":{},"body":{"license.html":{}}}],["group",{"_index":264,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["group.component",{"_index":579,"title":{},"body":{"index.html":{}}}],["group.model",{"_index":290,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model.ts",{"_index":263,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["group.ts",{"_index":497,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/action",{"_index":262,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["handled",{"_index":351,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["happens",{"_index":539,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":614,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":155,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hide",{"_index":101,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hide/show",{"_index":550,"title":{},"body":{"index.html":{}}}],["holders",{"_index":657,"title":{},"body":{"license.html":{}}}],["holding",{"_index":137,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hook",{"_index":386,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["html",{"_index":365,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["https://www.w3.org/tr/wai",{"_index":53,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["icon",{"_index":42,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":139,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":14,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["implemented",{"_index":217,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"classes/ActionToggle.html":{}}}],["implementing",{"_index":19,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["implements",{"_index":315,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["implied",{"_index":649,"title":{},"body":{"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["imports",{"_index":440,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["inactive",{"_index":151,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["included",{"_index":643,"title":{},"body":{"license.html":{}}}],["including",{"_index":626,"title":{},"body":{"license.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["inherited",{"_index":133,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["initial",{"_index":38,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["initially",{"_index":271,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["injectable",{"_index":392,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":393,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["injection",{"_index":329,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["injector",{"_index":182,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["injector.get(action.constructor",{"_index":391,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["input",{"_index":28,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["inputs",{"_index":320,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["install",{"_index":558,"title":{},"body":{"index.html":{}}}],["instance",{"_index":27,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["instanceof",{"_index":371,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instances",{"_index":594,"title":{},"body":{"index.html":{}}}],["instantiate",{"_index":120,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["instead",{"_index":181,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"overview.html":{}}}],["internally",{"_index":362,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["invoked",{"_index":327,"title":{},"body":{"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["isactive",{"_index":102,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["ischecked",{"_index":448,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isdestroyed",{"_index":103,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isdisabled",{"_index":104,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isenabled",{"_index":105,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["ishidden",{"_index":106,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isinactive",{"_index":107,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isunchecked",{"_index":449,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isvisible",{"_index":108,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["it's",{"_index":140,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["keep",{"_index":398,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["kind",{"_index":647,"title":{},"body":{"license.html":{}}}],["klemen",{"_index":611,"title":{},"body":{"license.html":{}}}],["label",{"_index":49,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["legend",{"_index":424,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["liability",{"_index":661,"title":{},"body":{"license.html":{}}}],["liable",{"_index":658,"title":{},"body":{"license.html":{}}}],["license",{"_index":606,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":627,"title":{},"body":{"license.html":{}}}],["limited",{"_index":650,"title":{},"body":{"license.html":{}}}],["line",{"_index":564,"title":{},"body":{"index.html":{}}}],["manually",{"_index":352,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["map",{"_index":223,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["map(checked",{"_index":475,"title":{},"body":{"classes/ActionToggle.html":{}}}],["matching",{"_index":72,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":541,"title":{},"body":{"index.html":{}}}],["menus",{"_index":535,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":652,"title":{},"body":{"license.html":{}}}],["merge",{"_index":221,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["merging",{"_index":141,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["metadata",{"_index":317,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["method",{"_index":216,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["methods",{"_index":89,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["miscellaneous",{"_index":523,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":607,"title":{},"body":{"license.html":{}}}],["modify",{"_index":629,"title":{},"body":{"license.html":{}}}],["module",{"_index":420,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["module,but",{"_index":587,"title":{},"body":{"index.html":{}}}],["modules",{"_index":422,"title":{"modules.html":{}},"body":{"modules/ActionOutletModule.html":{},"modules.html":{}}}],["more",{"_index":69,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["name",{"_index":122,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["natural",{"_index":542,"title":{},"body":{"index.html":{}}}],["never",{"_index":383,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["new",{"_index":82,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":253,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":559,"title":{},"body":{"index.html":{}}}],["ngactionoutlet",{"_index":529,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":436,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":385,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["ngoninit",{"_index":598,"title":{},"body":{"index.html":{}}}],["nide",{"_index":190,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["noninfringement",{"_index":655,"title":{},"body":{"license.html":{}}}],["notice",{"_index":641,"title":{},"body":{"license.html":{}}}],["notification",{"_index":458,"title":{},"body":{"classes/ActionToggle.html":{}}}],["notified",{"_index":538,"title":{},"body":{"index.html":{}}}],["notifies",{"_index":126,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notify",{"_index":206,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notifying",{"_index":130,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["npm",{"_index":561,"title":{},"body":{"index.html":{}}}],["null",{"_index":25,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["observable",{"_index":63,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["observables",{"_index":142,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["obtaining",{"_index":618,"title":{},"body":{"license.html":{}}}],["ondestroy",{"_index":316,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["one",{"_index":310,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["oninit",{"_index":596,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["options",{"_index":34,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":397,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["oservable",{"_index":248,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["oslaj",{"_index":612,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":664,"title":{},"body":{"license.html":{}}}],["out",{"_index":434,"title":{},"body":{"modules/ActionOutletModule.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":560,"title":{},"body":{"index.html":{}}}],["outlet.directive",{"_index":439,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.directive.ts",{"_index":300,"title":{},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:106",{"_index":326,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:143",{"_index":354,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:58",{"_index":334,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:87",{"_index":360,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:95",{"_index":346,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.model",{"_index":32,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["outlet.model.ts",{"_index":275,"title":{},"body":{"interfaces/ActionOutlet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["outlet.model.ts:28",{"_index":282,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:35",{"_index":285,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:42",{"_index":288,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.module.ts",{"_index":435,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.service.ts",{"_index":394,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["outlet.service.ts:51",{"_index":408,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:67",{"_index":410,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:83",{"_index":412,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet/core",{"_index":569,"title":{},"body":{"index.html":{}}}],["over",{"_index":547,"title":{},"body":{"index.html":{}}}],["override",{"_index":283,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["overriden",{"_index":68,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["overview",{"_index":671,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":506,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":232,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parameters",{"_index":121,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parent",{"_index":186,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["particular",{"_index":540,"title":{},"body":{"index.html":{},"license.html":{}}}],["permission",{"_index":613,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":552,"title":{},"body":{"index.html":{}}}],["permit",{"_index":636,"title":{},"body":{"license.html":{}}}],["person",{"_index":617,"title":{},"body":{"license.html":{}}}],["persons",{"_index":637,"title":{},"body":{"license.html":{}}}],["pointing",{"_index":574,"title":{},"body":{"index.html":{}}}],["portions",{"_index":645,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":537,"title":{},"body":{"index.html":{}}}],["previously",{"_index":191,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["prevously",{"_index":170,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["private",{"_index":382,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["produce",{"_index":456,"title":{},"body":{"classes/ActionToggle.html":{}}}],["project",{"_index":568,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":526,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/action",{"_index":6,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":358,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["properties",{"_index":21,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["property",{"_index":136,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["protected",{"_index":231,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["provide",{"_index":531,"title":{},"body":{"index.html":{}}}],["provided",{"_index":61,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":415,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["providers",{"_index":427,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["providing",{"_index":336,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["public",{"_index":119,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["publish",{"_index":630,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":654,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":40,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["readonlyarray",{"_index":270,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["receive",{"_index":249,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["refer",{"_index":605,"title":{},"body":{"index.html":{}}}],["reference",{"_index":381,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["registered",{"_index":258,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["render",{"_index":309,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["rendered",{"_index":337,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["renderer",{"_index":603,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":302,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["rendering.provide",{"_index":573,"title":{},"body":{"index.html":{}}}],["represent",{"_index":179,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["required",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":433,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["resolve",{"_index":332,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["resolvecomponentfactory",{"_index":333,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["restriction",{"_index":625,"title":{},"body":{"license.html":{}}}],["result",{"_index":71,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":73,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":246,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":174,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["rights",{"_index":628,"title":{},"body":{"license.html":{}}}],["root",{"_index":416,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["runtime",{"_index":536,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":222,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":224,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["same",{"_index":586,"title":{},"body":{"index.html":{}}}],["second",{"_index":457,"title":{},"body":{"classes/ActionToggle.html":{}}}],["selector",{"_index":318,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["sell",{"_index":634,"title":{},"body":{"license.html":{}}}],["service",{"_index":395,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["set",{"_index":167,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["set(children",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setactionoutlet(action",{"_index":363,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["setarialabel",{"_index":109,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setarialabel(arialabel",{"_index":204,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["seticon",{"_index":110,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["seticon('icon",{"_index":406,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["seticon(icon",{"_index":207,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setter",{"_index":335,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["settings",{"_index":585,"title":{},"body":{"index.html":{}}}],["settitle",{"_index":111,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["settitle('action",{"_index":405,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["settitle('example",{"_index":600,"title":{},"body":{"index.html":{}}}],["settitle(title",{"_index":209,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility",{"_index":112,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility(visibility",{"_index":211,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["shall",{"_index":642,"title":{},"body":{"license.html":{}}}],["shared",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shere",{"_index":18,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shorter",{"_index":295,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":113,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["slider",{"_index":444,"title":{},"body":{"classes/ActionToggle.html":{}}}],["software",{"_index":620,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["specific",{"_index":70,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["started",{"_index":528,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":44,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["statements",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":455,"title":{},"body":{"classes/ActionToggle.html":{}}}],["step",{"_index":557,"title":{},"body":{"index.html":{}}}],["string",{"_index":41,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["structural",{"_index":301,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["subject",{"_index":219,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["sublicense",{"_index":632,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":260,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscribers",{"_index":64,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscription",{"_index":252,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["subscriptions",{"_index":127,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["substantial",{"_index":644,"title":{},"body":{"license.html":{}}}],["super",{"_index":233,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["support",{"_index":668,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":669,"title":{},"body":{"modules.html":{}}}],["table",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":314,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["test",{"_index":83,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["tha",{"_index":66,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["this.action",{"_index":369,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.activate",{"_index":380,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.destroy",{"_index":370,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.getparent",{"_index":389,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutlet.createbutton",{"_index":409,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.creategroup",{"_index":411,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["this.actionoutlet.createtoggle",{"_index":413,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutletdestroy",{"_index":388,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutletfactory.createbutton",{"_index":404,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.changes",{"_index":237,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":377,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref",{"_index":367,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref.instance._action",{"_index":379,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.disabled$.pipe(map(disabled",{"_index":242,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire",{"_index":234,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire$.subscribe(this.options.callback",{"_index":244,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire.getvalue",{"_index":480,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next",{"_index":245,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.fire.next(!this.fire.getvalue",{"_index":477,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(false",{"_index":479,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(true",{"_index":478,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.pipe(map(checked",{"_index":476,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.getcomponenttype(this.action",{"_index":374,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.group",{"_index":312,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["this.group.createtoggle",{"_index":599,"title":{},"body":{"index.html":{}}}],["this.handlelivecycle(merge",{"_index":238,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.handlelivecycle(this.fire.asobservable",{"_index":235,"title":{},"body":{"classes/ActionButton.html":{}}}],["this.handlelivecycledistinct(this.fire.asobservable",{"_index":473,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.icon$.pipe(map(icon",{"_index":240,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.injector",{"_index":375,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.options.callback",{"_index":243,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.title$.pipe(map(title",{"_index":239,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.viewcontainerref.clear",{"_index":368,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":378,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.visible$.pipe(map(visible",{"_index":241,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["throw",{"_index":372,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["title",{"_index":39,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":294,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["toggle.check",{"_index":459,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.component",{"_index":581,"title":{},"body":{"index.html":{}}}],["toggle.ischecked",{"_index":461,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.isunchecked",{"_index":464,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.model",{"_index":293,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["toggle.model.ts",{"_index":481,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["toggle.trigger",{"_index":466,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts",{"_index":441,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle.ts:110",{"_index":454,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:126",{"_index":467,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:141",{"_index":460,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:153",{"_index":462,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:42",{"_index":453,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:47",{"_index":452,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:52",{"_index":451,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:94",{"_index":465,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.uncheck",{"_index":468,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle/action",{"_index":292,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":566,"title":{},"body":{"index.html":{}}}],["tool.choose",{"_index":565,"title":{},"body":{"index.html":{}}}],["tort",{"_index":663,"title":{},"body":{"license.html":{}}}],["trigger",{"_index":90,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["triggered",{"_index":132,"title":{},"body":{"classes/ActionButton.html":{}}}],["true",{"_index":345,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":26,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":673,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":15,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["typescript",{"_index":230,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["uncheck",{"_index":450,"title":{},"body":{"classes/ActionToggle.html":{}}}],["unchecked",{"_index":463,"title":{},"body":{"classes/ActionToggle.html":{}}}],["undefined",{"_index":183,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["underlying",{"_index":348,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["unique",{"_index":500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":163,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["use",{"_index":401,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":59,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["usevalue",{"_index":582,"title":{},"body":{"index.html":{}}}],["value",{"_index":60,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":676,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":177,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["view",{"_index":158,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["viewcontainerref",{"_index":324,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["visibility",{"_index":43,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["visible",{"_index":45,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":256,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["warranties",{"_index":651,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":646,"title":{},"body":{"license.html":{}}}],["way",{"_index":296,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["whenever",{"_index":131,"title":{},"body":{"classes/ActionButton.html":{}}}],["whether",{"_index":194,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["wish",{"_index":589,"title":{},"body":{"index.html":{}}}],["without",{"_index":624,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":562,"title":{},"body":{"index.html":{}}}],["yes",{"_index":123,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["zone.js",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":432,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionAbstractComponentImpl.html":{"url":"interfaces/ActionAbstractComponentImpl.html","title":"interface - ActionAbstractComponentImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractComponentImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract interface that all derived action component implementation types should extend\nAll components will shere this interface after implementing derived component implementation types\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _action\n                                    \n                                \n                                \n                                    \n                                        _action:     Action | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Action | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The derived action instance, as Input in angular component\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n    /**\n     * An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n     */\n    readonly ariaLabel?: string;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractEvent.html":{"url":"interfaces/ActionAbstractEvent.html","title":"interface - ActionAbstractEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that every event of child actions should extend from\nUsed as a value provided to fire$ observable subscribers\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         AnyAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnyAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action instance, tha this event is comming from\nShould be overriden by derived interface with more specific action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n    /**\n     * An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n     */\n    readonly ariaLabel?: string;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractOptions.html":{"url":"interfaces/ActionAbstractOptions.html","title":"interface - ActionAbstractOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract action options, extended by all options of every derived action class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ariaLabel\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ariaLabel\n                                    \n                                \n                                \n                                    \n                                        ariaLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action disabled state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action visibility state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n    /**\n     * An aria label added to the button element: https://www.w3.org/TR/wai-aria/#aria-label\n     */\n    readonly ariaLabel?: string;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionButton.html":{"url":"classes/ActionButton.html","title":"class - ActionButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton used to create basic button action\nExample\nconst button = new ActionButton({ title: 'Test' });Or\nconst button = actionFactory.createButton({ title: 'Test' });Or\nconst button = actionFactory.createButton().setTitle('Test');\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                ariaLabel$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trigger\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getAriaLabel\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setAriaLabel\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionButtonOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-button/action-button.ts:52\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionButton\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionButtonOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:47\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:42\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions whenever button is triggered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ariaLabel$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:117\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscribers when the ariaLabel changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:129\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:108\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:123\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:99\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:113\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:95\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:104\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-button/action-button.ts:90\n                \n            \n\n\n            \n                \n                    Will trigger fire$ subscribers\nShould be called in view component on click\nExample:\nbutton.trigger();\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:276\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:289\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:302\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:431\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:423\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAriaLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetAriaLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:359\n\n                \n            \n\n\n            \n                \n                    Returns current action ariaLabel\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:455\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:376\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:462\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:342\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:391\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:311\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:325\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:439\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:446\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:416\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:318\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:409\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAriaLabel\n                        \n                        \n                    \n                \n            \n            \n                \nsetAriaLabel(ariaLabel: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:351\n\n                \n            \n\n\n            \n                \n                    Will set the new ariaLabel and notify all ariaLabel subscribers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ariaLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:368\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:334\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:401\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:383\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:224\n\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionButtonComponentImpl, ActionButtonEvent, ActionButtonOptions } from './action-button.model';\n\n/**\n * Default options for `ActionButton`\n * Extended by provided options in action `constructor`\n */\nconst defaultButtonOptions: ActionButtonOptions = { };\n\n/**\n * `ActionButton` used to create basic button action\n *\n * ## Example\n *\n *\n *\n```typescript\nconst button = new ActionButton({ title: 'Test' });\n```\n *\n * **Or**\n *\n *\n```typescript\nconst button = actionFactory.createButton({ title: 'Test' });\n```\n *\n * **Or**\n *\n```typescript\nconst button = actionFactory.createButton().setTitle('Test');\n```\n */\nexport class ActionButton extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions whenever button is triggered\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `Subject`, used to notify subscribers on action trigger\n     */\n    protected fire: Subject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionButton`\n     *\n     * @param options Options for `ActionButton`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionButtonOptions = defaultButtonOptions,\n                component?: Type) {\n        super({ ...defaultButtonOptions, ...options }, component);\n\n        this.fire = new Subject();\n\n        this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will trigger `fire$` subscribers\n     * Should be called in view component on click\n     *\n     * #### Example:\n```typescript\nbutton.trigger();\n```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next({ action: this });\n        return this;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonEvent.html":{"url":"interfaces/ActionButtonEvent.html","title":"interface - ActionButtonEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionButton fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionButton\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButton\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionButton instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonOptions.html":{"url":"interfaces/ActionButtonOptions.html","title":"interface - ActionButtonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionButtonCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButtonCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupEvent.html":{"url":"interfaces/ActionGroupEvent.html","title":"interface - ActionGroupEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionGroup fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionGroup instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupOptions.html":{"url":"interfaces/ActionGroupOptions.html","title":"interface - ActionGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionGroup specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        dropdown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array, containing children actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdown\n                                    \n                                \n                                \n                                    \n                                        dropdown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean defining whether group is initially created as dropdown\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionOutlet.html":{"url":"interfaces/ActionOutlet.html","title":"interface - ActionOutlet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionOutlet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutlet interface is implemented by all factory classes.\ne.g. ActionOutletFactory and ActionGroup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createButton\n                                \n                                \n                                    createGroup\n                                \n                                \n                                    createToggle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:28\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionButton with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:35\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionGroup with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:42\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionToggle with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractEvent, ActionAbstractOptions } from './action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\n\n/**\n * AnyAction type is a shorter way to define the default abstract action type\n */\nexport type AnyAction = ActionAbstract;\n\n/**\n * ActionOutlet interface is implemented by all factory classes.\n *\n * e.g. `ActionOutletFactory` and `ActionGroup`\n */\nexport interface ActionOutlet {\n    /**\n     * When implemented should create and return a new instance of `ActionButton` with default options and component\n     * @param options Should override the default options for `ActionButton`\n     * @param component Should override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton;\n\n    /**\n     * When implemented should create and return a new instance of `ActionGroup` with default options and component\n     * @param options Should override the default options for `ActionGroup`\n     * @param component Should override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup;\n\n    /**\n     * When implemented should create and return a new instance of `ActionToggle` with default options and component\n     * @param options Should override the default options for `ActionToggle`\n     * @param component Should override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ActionOutletDirective.html":{"url":"directives/ActionOutletDirective.html","title":"directive - ActionOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ActionOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive used for rendering actions to the DOM.\nIt compiles and attaches the action components dinamically on the fly\nThe @Input is always an action derived from AbstractAction class, e.g.:\n\nActionButton: will render one button action\nActionGroup: will render one group action and all descendant actions\nActionToggle: will render one toggle action\n\nExample\nTypeScript\n this.group = new ActionGroup({\n    children: [\n        new ActionButton({\n            title: 'Action Title',\n            icon: 'icon',\n            callback: callbackMethod\n         })\n    ]\n});Template\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [actionOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionOutlet\n                            \n                            \n                                actionOutletDestroy\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actionOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-outlet.directive.ts:106\n                            \n                        \n\n                \n                    \n                            Invoked by Angular with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for Component creation via .createComponent()\n\n                                                        \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to resolve component factory via .resolveComponentFactory()\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                            \n                        \n                \n                    \n                        Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionOutletDestroy\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:95\n                            \n                        \n                \n                    \n                        Defines whether underlying child action instance will be destroyed automatically\nIf false, destruction of action should be handled MANUALLY\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComponentType\n                        \n                        \n                    \n                \n            \n            \n                \ngetComponentType(action: AnyAction, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.directive.ts:143\n                \n            \n\n\n            \n                \n                    Will return the Component type for provided action\nIf action has directly assigned Component type via constructor, then that component is forced and used\nIf action does not have directly assigned Component type via constructor, Injector is used to fetch proper Component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                AnyAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action to get Component for\n\n                                    \n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Injector from current directive instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n\n                \n                    \n                        getactionOutlet()\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:87\n                                \n                            \n                    \n                        \n                                Getter for internally used action\n\n\n                                \n                                    Returns :         AnyAction | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setactionOutlet(action)\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                                \n                            \n                    \n                        \n                                Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            action\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Injector,\n    Input,\n    OnDestroy,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractComponentImpl } from './action-abstract/action-abstract.model';\nimport { AnyAction } from './action-outlet.model';\n\n/**\n * Structural directive used for rendering actions to the DOM.\n * It compiles and attaches the action components **dinamically** on the fly\n *\n * The `@Input` is always an action derived from `AbstractAction` class, e.g.:\n * - `ActionButton`: will render one button action\n * - `ActionGroup`: will render one group action and all descendant actions\n * - `ActionToggle`: will render one toggle action\n *\n * ## Example\n *\n * **TypeScript**\n```typescript\n this.group = new ActionGroup({\n    children: [\n        new ActionButton({\n            title: 'Action Title',\n            icon: 'icon',\n            callback: callbackMethod\n         })\n    ]\n});\n```\n *\n * **Template**\n```html\n\n```\n */\n\n@Directive({\n    selector: '[actionOutlet]',\n})\nexport class ActionOutletDirective implements OnDestroy {\n    /**\n     * Action setter, providing action, to be rendered in the component's view container.\n     * *e.g. `ActionButton`, `ActionGroup`, etc.*\n     *\n     * On set, it will:\n     * - **Compile** and render a `Component` **dinamically** for provided `@Input` action\n     * - **Change/Update** the `Component` accordingly to the change detection\n     */\n    @Input() set actionOutlet(action: AnyAction | undefined) {\n        if (this.componentRef) {\n            this.viewContainerRef.clear();\n            this.componentRef = undefined;\n        }\n\n        if (this.action) {\n            this.action.destroy();\n        }\n\n        this.action = action;\n\n        if (this.action === undefined) {\n            return;\n        }\n\n        if (this.action instanceof ActionAbstract === false) {\n            throw new Error('Illegal state: \"actionOutlet\" should be instance of AbstractAction');\n        }\n\n        const component = this.getComponentType(this.action, this.injector);\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n        this.componentRef.instance._action = this.action.activate();\n    }\n\n    /**\n     * Getter for **internally** used action\n     */\n    get actionOutlet(): AnyAction | undefined {\n        return this.action;\n    }\n\n    /**\n     * Defines whether underlying child action instance will be destroyed automatically\n     * If `false`, destruction of action should be handled **MANUALLY**\n     */\n    @Input() actionOutletDestroy = true;\n\n    /**\n     * `Component` reference to the component, used by rendered action\n     */\n    private componentRef?: ComponentRef;\n\n    /**\n     * Action instance, used **internally** by the directive\n     * Should **never** be directly exposed\n     */\n    private action?: AnyAction;\n\n    /**\n     * Invoked by Angular with dependency injection\n     *\n     * @param viewContainerRef Used for Component creation via `.createComponent()`\n     * @param componentFactoryResolver Used to resolve component factory via `.resolveComponentFactory()`\n     */\n    constructor(\n        private viewContainerRef: ViewContainerRef,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private injector: Injector\n    ) { }\n\n    /**\n     * Angular `ngOnDestroy` hook will:\n     * - **Destroy** provided @Input action\n     * - **Clear** the view container\n     */\n    ngOnDestroy(): void {\n        if (this.actionOutletDestroy && this.action && !this.action.getParent()) {\n            this.action.destroy();\n        }\n\n        this.viewContainerRef.clear();\n        this.action = undefined;\n        this.componentRef = undefined;\n    }\n\n    /**\n     * Will return the `Component` type for provided action\n     * If action **has** directly assigned `Component` type via `constructor`, then that component is **forced** and used\n     * If action **does not have** directly assigned `Component` type via `constructor`, `Injector` is used to fetch proper `Component`\n     *\n     * @param action Action to get `Component` for\n     * @param injector `Injector` from current directive instance\n     */\n    getComponentType(action: AnyAction, injector: Injector): Type {\n        return action.getForcedComponent() || >injector.get(action.constructor);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionOutletFactory.html":{"url":"injectables/ActionOutletFactory.html","title":"injectable - ActionOutletFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActionOutletFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.service.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutletFactory is a service providing functional way to create the actions.\nIn order to keep the code clean, use only one approach.\nExample\nInstead of\nconst buttonAction = new ActionButton({\n    title: 'Action Title',\n    icon: 'icon',\n    callback: callbackMethod\n});Can do\nconst buttonAction = this.actionOutletFactory.createButton()\n    .setTitle('Action Title')\n    .setIcon('icon')\n    .fire$.subscribe(callbackMethod);\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createButton\n                            \n                            \n                                createGroup\n                            \n                            \n                                createToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:51\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionButton with default options and component\nExample:\nconst button = this.actionOutlet.createButton({ title: 'Test' });\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:67\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionGroup with default options and component\nExample:\nconst group = this.actionOutlet.createGroup({ dropdown: true });\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:83\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionToggle with default options and component\nExample:\nconst toggle = this.actionOutlet.createToggle({ checked: true });\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\n\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionOutlet } from './action-outlet.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\n\n/**\n * ActionOutletFactory is a service providing functional way to create the actions.\n * In order to keep the code clean, use only one approach.\n *\n * ## Example\n *\n * **Instead of**\n```typescript\nconst buttonAction = new ActionButton({\n    title: 'Action Title',\n    icon: 'icon',\n    callback: callbackMethod\n});\n```\n *\n * **Can do**\n```typescript\nconst buttonAction = this.actionOutletFactory.createButton()\n    .setTitle('Action Title')\n    .setIcon('icon')\n    .fire$.subscribe(callbackMethod);\n```\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionOutletFactory implements ActionOutlet {\n    /**\n     * Will create and return a new instance of `ActionButton` with default options and component\n     *\n     * #### Example:\n```typescript\nconst button = this.actionOutlet.createButton({ title: 'Test' });\n```\n     *\n     * @method createButton\n     * @param options Override the default options for `ActionButton`\n     * @param component Override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton {\n        return new ActionButton(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionGroup` with default options and component\n     *\n     * #### Example:\n```typescript\nconst group = this.actionOutlet.createGroup({ dropdown: true });\n```\n     *\n     * @method createGroup\n     * @param options Override the default options for `ActionGroup`\n     * @param component Override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup {\n        return new ActionGroup(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionToggle` with default options and component\n     *\n     * #### Example:\n```typescript\nconst toggle = this.actionOutlet.createToggle({ checked: true });\n```\n     *\n     * @method createToggle\n     * @param options Override the default options for `ActionToggle`\n     * @param component Override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle {\n        return new ActionToggle(options, component);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionOutletModule.html":{"url":"modules/ActionOutletModule.html","title":"module - ActionOutletModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionOutletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActionOutletDirective } from './action-outlet.directive';\n\n@NgModule({\n    declarations: [ActionOutletDirective],\n    imports: [CommonModule],\n    exports: [ActionOutletDirective]\n})\nexport class ActionOutletModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionToggle.html":{"url":"classes/ActionToggle.html","title":"class - ActionToggle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionToggle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle used to create action with toggle functionality,\ne.g. checkbox, toggle slider\nExample\nconst toggle = new ActionToggle({ checked: true });Or\nconst toggle = actionFactory.createToggle({ checked: true });Or\nconst toggle = actionFactory.createToggle().check();\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                ariaLabel$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                isChecked\n                            \n                            \n                                isUnchecked\n                            \n                            \n                                trigger\n                            \n                            \n                                uncheck\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getAriaLabel\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setAriaLabel\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionToggleOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-toggle/action-toggle.ts:52\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionToggle\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionToggleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:47\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled, checked\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:42\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions on the change of checked state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            ariaLabel$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:117\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscribers when the ariaLabel changes.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:129\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:108\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:123\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:99\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:113\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:95\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:104\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:110\n                \n            \n\n\n            \n                \n                    Will set checked status to true\nIt will not produce second notification if already checked\nExample:\ntoggle.check();\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:141\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is checked\nExample:\nconst isChecked = toggle.isChecked();\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUnchecked\n                        \n                        \n                    \n                \n            \n            \n                \nisUnchecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:153\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is unchecked\nExample:\nconst isUnchecked = toggle.isUnchecked();\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:94\n                \n            \n\n\n            \n                \n                    Will toggle current checked state when invoked\nShould be called in view component on click\nExample:\ntoggle.trigger();\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uncheck\n                        \n                        \n                    \n                \n            \n            \n                \nuncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:126\n                \n            \n\n\n            \n                \n                    Will set checked status to false\nIt will not produce second notification if already unchecked\nExample:\ntoggle.uncheck();\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:276\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:289\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:302\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:431\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:423\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAriaLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetAriaLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:359\n\n                \n            \n\n\n            \n                \n                    Returns current action ariaLabel\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:455\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:376\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:462\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:342\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:391\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:311\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:325\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:439\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:446\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:416\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:318\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:409\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAriaLabel\n                        \n                        \n                    \n                \n            \n            \n                \nsetAriaLabel(ariaLabel: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:351\n\n                \n            \n\n\n            \n                \n                    Will set the new ariaLabel and notify all ariaLabel subscribers\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ariaLabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:368\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:334\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:401\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:383\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:224\n\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionToggleComponentImpl, ActionToggleEvent, ActionToggleOptions } from './action-toggle.model';\n\n/**\n * Default options for `ActionToggle`\n * Extended by provided options in action `constructor`\n */\nconst defaultToggleOptions: ActionToggleOptions = {\n    checked: false,\n};\n\n/**\n * `ActionToggle` used to create action with toggle functionality,\n * *e.g. checkbox, toggle slider*\n *\n * ## Example\n *\n```typescript\nconst toggle = new ActionToggle({ checked: true });\n```\n *\n * **Or**\n *\n```typescript\nconst toggle = actionFactory.createToggle({ checked: true });\n```\n *\n * **Or**\n *\n```typescript\nconst toggle = actionFactory.createToggle().check();\n```\n */\nexport class ActionToggle extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions on the change of `checked` state\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled, checked*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `BehaviorSubject`, holding the current checked state\n     */\n    protected fire: BehaviorSubject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionToggle`\n     *\n     * @param options Options for `ActionToggle`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionToggleOptions = defaultToggleOptions,\n                component?: Type) {\n        super({ ...defaultToggleOptions, ...options }, component);\n\n        this.fire = new BehaviorSubject(!!this.options.checked);\n\n        this.fire$ = this.handleLivecycleDistinct(this.fire.asObservable(), false).pipe(\n          map(checked => ({ action: this, checked }))\n        );\n\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled }))),\n            this.fire.pipe(map(checked => ({ checked })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will toggle current checked state when invoked\n     * Should be called in view component on click\n     *\n     * #### Example:\n```typescript\ntoggle.trigger();\n```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next(!this.fire.getValue());\n        return this;\n    }\n\n    /**\n     * Will set checked status to `true`\n     * It will **not** produce second notification if already checked\n     *\n     * #### Example:\n```typescript\ntoggle.check();\n```\n     *\n     * @method check\n     */\n    check(): this {\n        this.fire.next(true);\n        return this;\n    }\n\n    /**\n     * Will set checked status to `false`\n     * It will **not** produce second notification if already unchecked\n     *\n     * #### Example:\n```typescript\ntoggle.uncheck();\n```\n     *\n     * @method uncheck\n     */\n    uncheck(): this {\n        this.fire.next(false);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is checked\n     *\n     * #### Example:\n```typescript\nconst isChecked = toggle.isChecked();\n```\n     *\n     * @method isChecked\n     */\n    isChecked(): boolean {\n        return this.fire.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is unchecked\n     *\n     * #### Example:\n```typescript\nconst isUnchecked = toggle.isUnchecked();\n```\n     */\n    isUnchecked(): boolean {\n        return !this.fire.getValue();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleEvent.html":{"url":"interfaces/ActionToggleEvent.html","title":"interface - ActionToggleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionToggle fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionToggle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionToggle instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    New checked state of the action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleOptions.html":{"url":"interfaces/ActionToggleOptions.html","title":"interface - ActionToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionToggleCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggleCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial checked state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractComponentImpl\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            class\n            ActionAbstract\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            variable\n            defaultAbstractOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            class\n            ActionButton\n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            variable\n            defaultButtonOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            class\n            ActionGroup\n            \n                100 %\n                (60/60)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            defaultGroupOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            unique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.directive.ts\n            \n            directive\n            ActionOutletDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.model.ts\n            \n            interface\n            ActionOutlet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.service.ts\n            \n            injectable\n            ActionOutletFactory\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            class\n            ActionToggle\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            variable\n            defaultToggleOptions\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.6\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.6\n        \n            @angular/compiler : ^10.0.6\n        \n            @angular/core : ^10.0.6\n        \n            @angular/forms : ^10.0.6\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.6\n        \n            @angular/platform-browser-dynamic : ^10.0.6\n        \n            @angular/router : ^10.0.6\n        \n            rxjs : ^6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionState   (projects/.../action-abstract.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionState\n                    \n                \n                    \n                        \n                            The state of the action\nCan be Active, Inactive or Destroyed\n\n                        \n                    \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                 Inactive\n                            \n                        \n                        \n                            \n                                 Destroyed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n    \n\n\n\nNgActionOutlet\nThe goal of ActionOutlet is to provide an easy API to build dynamic menus on runtime and have the possibility to get notified for each and every change, that happens to any particular action in the menu (e.g. Title change, icon change, disabled state, ...).\nThe most natural use case is when back-end is in charge over the visibility of actions and menus of the front-end application (e.g. hide/show actions based on permissions).\nDEMO 1 Basic\n\nDEMO 2 Advanced\n\nGetting started\nStep 1: Install ng-action-outlet\nYou can use either npm or yarn command-line tool.Choose the tool that is appropriate for your project.\nNPM\nnpm install @ng-action-outlet/core\nYARN\nyarn add @ng-action-outlet/core\nStep 2: Import ActionOutletModule\nImport Action Outlet NgModule to your Angular module\nimport { ActionOutletModule } from '@ng-action-outlet/core';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  ...\n})\nexport class ExampleModule { }Step 3: Define what component to use with what action\nUse providers to set default components for each action to be used for rendering.Provide action class and use value pointing to your component class,\nso that action outlet can associate component to provided action.\nimport { ActionOutletModule, ActionButton, ActionGroup, ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleButtonComponent } from './example-button.component';\nimport { ExampleGroupComponent } from './example-group.component';\nimport { ExampleToggleComponent } from './example-toggle.component';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  providers: [{\n      provide: ActionButton,\n      useValue: ExampleButtonComponent\n  }, {\n      provide: ActionGroup,\n      useValue: ExampleGroupComponent\n  }, {\n      provide: ActionToggle,\n      useValue: ExampleToggleComponent\n  }]\n  ...\n})\nexport class ExampleModule { }Step 4: Override default's in your component\nIn order to override your default settings, do the same as initially in a module,but only for actions that you actually wish to change.\nimport { ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleCheckboxComponent } from './example-checkbox.component';\n\n@Component({\n  ...\n  providers: [{\n      provide: ActionToggle,\n      useValue: ExampleCheckboxComponent\n  }]\n  ...\n})\nexport class ExampleComponent { }Step 5: Create action instances\nCreate actions in a component class so that they can be accessed from the template.\nimport { ActionOutletFactory } from '@ng-action-outlet/core';\n\n@Component(...)\nexport class ExampleComponent implements OnInit {\n    ...\n    group: ActionGroup;\n\n    constructor(private actionOutlet: ActionOutletFactory) { }\n\n    ngOnInit() {\n        this.group = this.actionOutlet.createGroup();\n        this.group.createToggle()\n          .setTitle('Example title')\n          .check();\n    }\n    ...\n}Step 6: Render the actions\nBind created actions to actionOutlet renderer directive.\nAvailable actions\n\nActionButton\nActionGroup\nActionToggle\n\nIn order to create custom action class, refer to ActionAbstract class.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Klemen Oslaj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionOutletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionButtonCallback   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionButtonComponentImpl   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionGroupComponentImpl   (projects/.../action-group.model.ts)\n                        \n                        \n                            ActionToggleCallback   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            ActionToggleComponentImpl   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            AnyAction   (projects/.../action-outlet.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-button/action-button.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionButtonCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionButton fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionButtonComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionButton should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-group/action-group.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionGroupComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionGroup should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-toggle/action-toggle.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionToggleCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionToggle fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionToggleComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionToggle should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-outlet.model.ts\n    \n    \n        \n            \n                \n                    \n                    AnyAction\n                \n            \n            \n                \n                    AnyAction type is a shorter way to define the default abstract action type\n\n                \n            \n            \n                \n                            ActionAbstract\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAbstractOptions   (projects/.../action-abstract.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-button.ts)\n                        \n                        \n                            defaultGroupOptions   (projects/.../action-group.ts)\n                        \n                        \n                            defaultToggleOptions   (projects/.../action-toggle.ts)\n                        \n                        \n                            unique   (projects/.../action-group.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAbstractOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Required\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: '',\n    ariaLabel: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionAbstract - shared between all actions\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-button/action-button.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultButtonOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionButtonOptions\n\n                        \n                    \n                    \n                        \n                            Default value : { }\n                        \n                    \n\n                \n                    \n                        Default options for ActionButton\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-group/action-group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGroupOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionGroupOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    children: [],\n    dropdown: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionGroup\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unique\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (children: AnyAction[]) => Array.from(\n    new Set(children)\n)\n                        \n                    \n\n                \n                    \n                        Will return a unique array of actions\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultToggleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    checked: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionToggle\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
