var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionAbstractComponentImpl.html",[0,0.023,1,0.56]],["body/interfaces/ActionAbstractComponentImpl.html",[0,0.043,1,0.704,2,0.503,3,0.503,4,0.372,5,0.258,6,0.435,7,1.539,8,0.575,9,0.929,10,3.077,11,0.454,12,0.87,13,0.831,14,0.598,15,1.294,16,2.486,17,0.313,18,1.459,19,3.39,20,0.047,21,0.812,22,2.486,23,1.889,24,1.947,25,2.868,26,0.703,27,1.889,28,2.486,29,2.486,30,0.435,31,1.168,32,1.057,33,0.601,34,0.959,35,0.74,36,0.503,37,1.643,38,1.48,39,1.536,40,2.486,41,1.48,42,1.889,43,1.315,44,1.889,45,1.195,46,1.539,47,1.192,48,0.74,49,0.74,50,1.057,51,0.834,52,0.575,53,1.776,54,1.776,55,1.776,56,1.776,57,0.834,58,0.029,59,0.029]],["title/interfaces/ActionAbstractEvent.html",[0,0.023,52,0.641]],["body/interfaces/ActionAbstractEvent.html",[0,0.043,1,0.517,2,0.517,3,0.517,4,0.383,5,0.265,6,0.448,7,1.584,8,0.592,9,0.822,10,2.964,11,0.453,12,0.771,13,0.714,14,0.514,15,1.31,16,1.828,17,0.323,18,1.368,19,2.537,20,0.047,21,0.824,22,2.198,23,1.389,24,1.734,25,2.537,26,0.714,27,1.389,28,1.828,29,1.828,30,0.448,31,1.478,32,1.088,33,0.611,34,0.968,35,0.761,36,0.517,37,1.664,38,1.51,39,1.552,40,2.537,41,1.51,42,1.928,43,1.341,44,1.928,45,1.425,46,2.198,47,1.703,48,1.056,49,1.056,50,1.51,51,1.191,52,0.822,53,2.537,54,2.537,55,2.537,56,2.537,57,1.191,58,0.03,59,0.03]],["title/interfaces/ActionAbstractOptions.html",[0,0.023,36,0.56]],["body/interfaces/ActionAbstractOptions.html",[0,0.041,1,0.485,2,0.485,3,0.485,4,0.359,5,0.249,6,0.42,7,1.485,8,0.555,9,0.911,10,2.903,11,0.45,12,0.749,13,0.689,14,0.591,15,1.274,16,1.714,17,0.302,18,1.321,19,2.424,20,0.047,21,0.686,22,2.101,23,1.302,24,2.05,25,2.424,26,0.594,27,1.302,28,1.714,29,1.714,30,0.42,31,1.139,32,1.02,33,0.59,34,1.095,35,1.01,36,0.686,37,1.86,38,1.994,39,1.516,40,3.351,41,1.994,42,2.546,43,1.617,44,2.546,45,1.172,46,1.485,47,1.15,48,0.714,49,0.714,50,1.02,51,0.805,52,0.555,53,1.714,54,1.714,55,1.714,56,1.714,57,0.805,58,0.028,59,0.028]],["title/interfaces/ActionButtonEvent.html",[0,0.023,60,1.716]],["body/interfaces/ActionButtonEvent.html",[0,0.041,1,0.79,2,0.596,3,0.596,4,0.441,5,0.306,6,0.516,8,0.682,9,0.682,11,0.412,12,0.516,13,0.516,14,0.588,15,1.389,17,0.371,18,1.471,20,0.047,21,0.79,26,0.516,30,0.684,33,0.699,34,0.886,36,0.79,39,1.311,45,1.445,49,1.389,50,1.253,51,1.471,52,1.014,57,1.311,58,0.033,59,0.033,60,2.714,61,1.253,62,1.824,63,1.788,64,1.874,65,1.662,66,1.874,67,1.113,68,1.413,69,1.6,70,1.6,71,1.6,72,1.864,73,2.792,74,1.6,75,1.413,76,1.253,77,1.824,78,1.824]],["title/interfaces/ActionButtonOptions.html",[0,0.023,76,1.178]],["body/interfaces/ActionButtonOptions.html",[0,0.039,1,0.781,2,0.586,3,0.586,4,0.434,5,0.301,6,0.507,8,0.671,9,0.894,11,0.359,12,0.507,13,0.507,14,0.584,15,1.437,17,0.365,18,1.556,20,0.047,21,0.586,26,0.507,30,0.677,33,0.695,34,1.042,36,0.879,39,1.297,45,1.294,49,1.38,50,1.643,51,1.459,52,0.894,57,1.556,58,0.032,59,0.032,60,2.392,61,1.232,62,1.794,63,1.729,64,1.39,65,1.232,66,1.39,67,1.095,68,1.39,69,1.573,70,1.573,71,1.573,72,2.157,73,3.313,74,1.573,75,1.853,76,1.643,77,2.392,78,2.392]],["title/interfaces/ActionGroupEvent.html",[0,0.023,79,1.716]],["body/interfaces/ActionGroupEvent.html",[0,0.04,1,0.789,2,0.594,3,0.594,4,0.44,5,0.305,6,0.515,8,0.68,9,0.68,11,0.427,12,0.515,13,0.515,14,0.552,15,1.388,17,0.371,18,1.469,20,0.047,21,0.789,24,1.659,26,0.515,30,0.767,31,0.986,32,1.25,33,0.656,34,0.885,36,0.789,37,1.11,39,1.469,45,1.388,49,1.161,51,1.309,52,1.013,57,1.309,58,0.033,59,0.033,64,1.871,65,1.659,66,1.871,67,1.11,75,1.41,79,2.415,80,1.25,81,1.82,82,1.773,83,1.871,84,1.596,85,1.25,86,2.1,87,2.1,88,2.415,89,2.476,90,1.25,91,1.82,92,1.596,93,2.118]],["title/interfaces/ActionGroupOptions.html",[0,0.023,85,1.178]],["body/interfaces/ActionGroupOptions.html",[0,0.038,1,0.766,2,0.568,3,0.568,4,0.421,5,0.292,6,0.492,8,0.651,9,0.876,11,0.407,12,0.492,13,0.492,14,0.577,15,1.423,17,0.354,18,1.537,20,0.047,21,0.568,24,2.033,26,0.492,30,0.75,31,0.943,32,1.196,33,0.641,34,1.035,36,0.866,37,1.43,39,1.437,45,1.127,49,0.837,51,0.943,52,0.876,57,1.537,58,0.032,59,0.032,64,1.348,65,1.196,66,1.348,67,1.062,75,1.816,79,1.741,80,1.196,81,1.741,82,1.689,83,2.053,84,1.526,85,1.61,86,2.705,87,2.705,88,3.049,89,3.606,90,1.61,91,2.344,92,2.056,93,2.674]],["title/interfaces/ActionOutlet.html",[0,0.023,94,1.329]],["body/interfaces/ActionOutlet.html",[0,0.033,2,0.402,3,0.402,4,0.298,5,0.407,6,0.519,8,0.907,9,0.685,11,0.395,12,0.94,13,0.819,14,0.653,17,0.251,20,0.047,21,0.889,30,0.837,31,0.994,33,0.444,34,1.074,35,0.881,36,0.402,52,0.46,58,0.025,59,0.025,61,1.26,63,1.604,67,0.751,68,0.954,69,1.08,76,1.667,80,1.26,82,1.657,83,0.954,84,1.08,85,1.667,90,1.667,92,2.386,94,1.88,95,1.421,96,2.495,97,2.116,98,1.608,99,2.116,100,2.495,101,2.495,102,2.495,103,2.495,104,2.061,105,2.96,106,1.869,107,2.526,108,2.529,109,2.529,110,3.701,111,3.572,112,2.495,113,2.061,114,2.495,115,1.667,116,2.061,117,1.604,118,1.08,119,1.421,120,1.675,121,1.675,122,1.08,123,1.26,124,1.675,125,1.08,126,1.675,127,1.421,128,3.14]],["title/directives/ActionOutletDirective.html",[129,1.505,130,1.505]],["body/directives/ActionOutletDirective.html",[1,0.256,2,0.256,3,0.256,4,0.189,5,0.398,6,0.363,8,0.611,9,0.293,10,1.285,11,0.447,12,0.896,13,0.363,14,0.551,17,0.159,20,0.047,21,0.734,22,2.707,23,1.434,26,0.808,30,0.535,31,1.343,32,0.538,33,0.189,34,0.534,35,0.786,38,1.3,41,1.3,43,0.478,46,1.285,47,0.606,48,1.234,58,0.017,59,0.017,63,1.286,67,0.478,68,0.996,72,0.883,74,1.127,82,1.286,83,0.996,87,2.184,88,1.285,90,1.702,91,1.285,94,1.92,96,1.748,97,2.412,99,1.483,105,2.478,106,1.436,107,0.606,108,1.887,109,1.887,117,0.697,118,0.687,119,0.996,125,1.127,128,2.184,129,2.174,130,1.127,131,1.065,132,2.151,133,3.94,134,2.151,135,3.498,136,2.151,137,3.498,138,2.151,139,2.151,140,2.736,141,3.056,142,2.151,143,1.483,144,2.224,145,1.748,146,1.748,147,1.748,148,2.736,149,1.31,150,2.151,151,2.151,152,2.736,153,2.151,154,2.843,155,1.31,156,3.972,157,4.147,158,5.009,159,1.31,160,2.151,161,1.127,162,1.127,163,2.151,164,4.147,165,2.151,166,2.151,167,2.151,168,2.736,169,2.736,170,3.167,171,2.224,172,2.575,173,2.736,174,2.736,175,2.224,176,2.736,177,2.151,178,2.151,179,2.224,180,2.151,181,2.224,182,2.151,183,2.151,184,2.151,185,1.483,186,1.31,187,2.151,188,1.31,189,3.498,190,3.167,191,2.151,192,2.151,193,2.151,194,2.151,195,1.31,196,1.31,197,2.151,198,2.736,199,1.31,200,2.736,201,1.31,202,1.31,203,3.76,204,3.167,205,2.151,206,3.167,207,1.31,208,1.31,209,1.31,210,1.748,211,1.31,212,1.31,213,1.31,214,1.31,215,1.31,216,1.31,217,1.31,218,1.065,219,3.167,220,1.31,221,1.31,222,1.065,223,2.151,224,1.31,225,1.31,226,1.31,227,1.31,228,1.31,229,1.31,230,1.31]],["title/injectables/ActionOutletFactory.html",[98,1.505,162,1.505]],["body/injectables/ActionOutletFactory.html",[2,0.314,3,0.314,4,0.232,5,0.357,8,0.796,11,0.384,12,0.922,13,0.272,14,0.604,17,0.195,20,0.047,21,0.805,26,0.428,27,1.329,30,0.756,32,0.66,33,0.232,34,1.037,35,0.462,38,1.837,41,1.464,48,0.728,58,0.02,59,0.02,61,1.041,63,1.558,68,1.454,69,0.842,72,1.041,76,1.464,80,1.041,82,1.492,83,1.454,84,0.842,85,1.464,90,1.289,92,2.345,93,1.329,94,1.174,98,1.869,99,2.677,100,2.553,101,2.553,102,2.553,103,2.061,105,2.922,106,1.974,107,2.413,108,2.166,109,2.166,110,3.353,111,3.373,112,2.061,114,2.061,115,1.464,117,1.492,118,0.842,120,1.306,121,1.306,122,0.842,123,1.041,124,1.306,125,1.646,127,1.749,128,2.844,141,2.061,143,3.086,144,3.155,146,2.061,162,1.646,185,2.459,210,3.833,231,1.306,232,2.535,233,2.061,234,2.535,235,2.535,236,2.535,237,2.535,238,2.535,239,3.566,240,2.535,241,2.535,242,2.535,243,2.535,244,1.607,245,2.535,246,2.535,247,1.607,248,2.061,249,1.607,250,2.535,251,1.329,252,1.607,253,1.607,254,1.607,255,1.607,256,1.607]],["title/modules/ActionOutletModule.html",[257,1.329,258,1.505]],["body/modules/ActionOutletModule.html",[2,0.706,3,0.706,4,0.523,5,0.362,11,0.289,14,0.44,20,0.046,30,0.871,33,0.745,35,1.039,48,1.039,58,0.036,59,0.036,118,1.896,130,2.984,161,1.896,257,2.091,258,2.877,259,2.942,260,4.002,261,2.942,262,2.942,263,2.942,264,2.942,265,3.671,266,2.942,267,2.496,268,3.619,269,4.516,270,2.942,271,3.671,272,3.619,273,3.619]],["title/interfaces/ActionToggleEvent.html",[0,0.023,274,1.716]],["body/interfaces/ActionToggleEvent.html",[0,0.04,1,0.753,2,0.554,3,0.554,4,0.411,5,0.284,6,0.48,8,0.635,9,0.635,11,0.42,12,0.48,13,0.48,14,0.598,15,1.349,17,0.346,18,1.418,20,0.047,21,0.753,24,1.928,26,0.48,30,0.652,33,0.679,34,0.917,36,0.753,37,1.036,39,1.521,43,1.597,45,1.411,49,1.349,50,1.166,51,1.418,52,0.978,57,1.249,58,0.031,59,0.031,64,1.785,65,1.583,66,1.785,67,1.036,70,1.489,71,1.489,72,1.798,74,1.489,75,1.315,77,1.698,78,1.698,106,1.583,115,1.166,117,1.766,122,1.489,123,1.166,125,1.489,251,2.763,274,2.617,275,1.698,276,2.66]],["title/interfaces/ActionToggleOptions.html",[0,0.023,115,1.178]],["body/interfaces/ActionToggleOptions.html",[0,0.038,1,0.743,2,0.543,3,0.543,4,0.403,5,0.279,6,0.471,8,0.622,9,0.85,11,0.372,12,0.471,13,0.471,14,0.593,15,1.401,17,0.339,18,1.509,20,0.047,21,0.543,24,1.912,26,0.471,30,0.643,33,0.673,34,1.069,36,0.846,37,1.387,39,1.509,43,1.581,45,1.245,49,1.338,50,1.562,51,1.404,52,0.85,57,1.509,58,0.031,59,0.031,64,1.289,65,1.143,66,1.289,67,1.015,70,1.459,71,1.459,72,2.116,74,1.459,75,1.761,77,2.274,78,2.274,106,1.143,115,1.562,117,1.7,122,1.459,123,1.143,125,1.459,251,2.75,274,2.274,275,1.664,276,3.213]],["title/coverage.html",[277,3.158]],["body/coverage.html",[0,0.043,1,0.545,4,0.403,5,0.57,6,0.825,7,2.593,14,0.34,20,0.046,35,1.339,36,0.545,52,0.623,58,0.031,59,0.031,60,1.668,61,1.914,62,2.277,63,0.904,76,1.146,79,1.668,80,2.004,81,2.277,82,0.904,85,1.146,94,1.292,95,1.925,98,1.463,106,1.146,115,1.146,117,0.904,119,1.292,123,1.914,129,1.463,130,1.463,131,2.269,162,1.463,231,2.269,274,1.668,275,2.277,277,2.269,278,2.269,279,2.791,280,2.791,281,5.694,282,4.663,283,4.663,284,3.811,285,2.628,286,2.791,287,3.366,288,2.269,289,4.881,290,3.098,291,2.791,292,2.269,293,3.528,294,2.791,295,2.269,296,2.269,297,3.811,298,3.098,299,2.791,300,2.269,301,2.791,302,2.791]],["title/dependencies.html",[161,1.805,303,2.414]],["body/dependencies.html",[20,0.047,58,0.038,59,0.038,118,2.036,161,2.036,270,3.158,304,3.885,305,5.662,306,3.885,307,3.885,308,3.885,309,4.718,310,3.835,311,3.158,312,3.885,313,3.885,314,3.885,315,3.885,316,3.885,317,3.885,318,3.885,319,3.885,320,3.885,321,3.885,322,3.885,323,3.885]],["title/miscellaneous/enumerations.html",[324,1.117,325,2.799]],["body/miscellaneous/enumerations.html",[5,0.425,6,0.718,11,0.339,17,0.517,20,0.04,43,1.549,58,0.04,59,0.04,179,4.046,285,3.432,324,1.967,325,3.454,326,4.977,327,2.93,328,4.977,329,4.977]],["title/index.html",[17,0.294,330,1.665,331,1.665]],["body/index.html",[11,0.444,12,0.833,13,0.369,20,0.047,21,0.426,23,1.145,26,0.786,27,1.679,30,0.886,33,0.604,35,1.444,37,0.797,38,1.315,41,0.897,42,1.145,43,0.797,44,1.145,47,1.012,48,1.444,58,0.026,59,0.026,63,1.229,65,0.897,68,1.012,82,1.354,83,1.012,90,0.897,92,2.19,93,1.145,94,1.756,97,2.21,98,1.679,107,1.483,111,2.21,117,1.441,119,1.012,129,1.145,133,2.605,143,2.882,145,1.776,147,1.776,171,1.776,172,2.605,175,3.397,218,1.776,222,1.776,248,1.776,251,1.145,257,1.012,258,2.332,271,3.085,311,1.776,330,1.507,331,1.507,332,2.185,333,2.185,334,2.185,335,2.185,336,2.185,337,3.795,338,2.185,339,2.185,340,2.185,341,3.205,342,2.185,343,1.776,344,2.185,345,2.185,346,2.185,347,3.795,348,1.776,349,2.185,350,3.205,351,2.185,352,2.185,353,2.185,354,4.651,355,1.776,356,3.205,357,4.806,358,3.795,359,3.795,360,3.795,361,2.185,362,2.185,363,2.185,364,2.185,365,2.185,366,2.185,367,4.651,368,2.185,369,2.185,370,3.205,371,2.185,372,2.185,373,2.185,374,1.776,375,3.205,376,2.185,377,3.205,378,2.185,379,3.205,380,2.185,381,4.179,382,1.776,383,2.185,384,2.185,385,2.185,386,2.185,387,2.185,388,3.205,389,2.185,390,3.205,391,2.185,392,2.185,393,2.185,394,2.185,395,2.185,396,2.185,397,2.185,398,2.185,399,2.185,400,2.185]],["title/license.html",[330,1.665,331,1.665,401,1.962]],["body/license.html",[4,0.491,11,0.271,20,0.035,26,0.733,45,0.975,48,0.975,58,0.035,59,0.035,91,2.029,267,2.342,278,2.76,343,2.76,348,2.76,374,2.76,401,2.76,402,3.396,403,4.781,404,3.396,405,3.396,406,3.396,407,3.396,408,4.339,409,3.396,410,3.396,411,3.396,412,4.339,413,3.396,414,5.038,415,5.533,416,4.339,417,4.781,418,3.396,419,4.781,420,4.339,421,3.396,422,3.396,423,3.396,424,3.396,425,3.396,426,3.396,427,3.396,428,3.396,429,3.396,430,3.396,431,3.396,432,3.396,433,3.396,434,3.396,435,4.339,436,4.339,437,3.396,438,3.396,439,4.339,440,3.396,441,3.396,442,3.396,443,3.396,444,3.396,445,3.396,446,3.396,447,3.396,448,3.396,449,3.396,450,3.396,451,3.396,452,3.396,453,3.396,454,3.396,455,3.396,456,3.396,457,3.396]],["title/modules.html",[257,1.798]],["body/modules.html",[20,0.041,58,0.041,59,0.041,257,2.049,258,2.32,310,3.598,458,4.427,459,4.427,460,4.427]],["title/overview.html",[461,3.158]],["body/overview.html",[0,0.032,20,0.043,33,0.574,35,1.14,48,1.14,58,0.038,59,0.038,129,2.08,130,2.933,161,2.08,162,2.08,257,2.213,258,2.855,259,3.227,260,3.227,261,3.227,262,3.227,263,3.227,264,3.227,265,3.886,266,3.227,267,2.738,355,4.169,382,3.227,461,3.227,462,3.97]],["title/miscellaneous/typealiases.html",[324,1.117,463,3.444]],["body/miscellaneous/typealiases.html",[1,0.943,5,0.508,9,0.775,11,0.277,12,0.816,13,0.816,14,0.651,17,0.422,20,0.035,26,0.816,31,1.645,49,1.263,58,0.035,59,0.035,61,1.424,62,2.886,63,1.425,69,2.531,70,2.305,71,2.305,72,1.806,73,3.331,80,1.424,81,2.629,82,1.124,84,2.531,90,1.424,95,3.034,107,1.606,117,1.425,119,1.606,122,2.531,123,1.424,126,2.821,127,2.393,233,3.576,275,2.886,276,3.331,324,1.606,327,3.692,464,3.47]],["title/miscellaneous/variables.html",[287,2.375,324,1.117]],["body/miscellaneous/variables.html",[5,0.482,6,0.511,11,0.411,14,0.586,15,1.384,17,0.368,20,0.046,31,0.979,34,1.044,36,0.785,38,1.241,41,1.241,42,1.585,44,1.585,47,2.322,48,1.384,58,0.032,59,0.032,61,1.241,63,0.979,76,1.651,80,1.241,82,0.979,85,1.651,86,2.085,88,2.404,93,1.585,105,1.807,106,1.241,107,2.506,115,1.651,117,0.979,119,1.4,123,1.241,154,3.916,181,3.674,185,2.085,251,1.585,285,2.774,287,2.085,288,3.674,290,3.27,292,3.674,293,3.674,295,3.674,296,3.916,298,3.27,300,3.674,324,1.4,327,3.46,465,3.024,466,3.024,467,3.024,468,3.024]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":355,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/1",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":462,"title":{},"body":{"overview.html":{}}}],["100",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":369,"title":{},"body":{"index.html":{}}}],["2.5.4",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":405,"title":{},"body":{"license.html":{}}}],["3",{"_index":371,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":382,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4/4",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":391,"title":{},"body":{"index.html":{}}}],["5.0.9",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["58/58",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":397,"title":{},"body":{"index.html":{}}}],["6.3.3",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["abov",{"_index":434,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["abstract.model",{"_index":67,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["abstract.model.t",{"_index":7,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"coverage.html":{}}}],["abstract.t",{"_index":285,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstract/act",{"_index":6,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstractact",{"_index":140,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["access",{"_index":392,"title":{},"body":{"index.html":{}}}],["accessor",{"_index":153,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accordingli",{"_index":174,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["action",{"_index":11,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action.getforcedcompon",{"_index":229,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionabstract",{"_index":119,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionabstractcomponentimpl",{"_index":1,"title":{"interfaces/ActionAbstractComponentImpl.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionabstractev",{"_index":52,"title":{"interfaces/ActionAbstractEvent.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionabstractopt",{"_index":36,"title":{"interfaces/ActionAbstractOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionbutton",{"_index":63,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionbutton(opt",{"_index":254,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actionbuttoncallback",{"_index":73,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttoncomponentimpl",{"_index":69,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttonev",{"_index":60,"title":{"interfaces/ActionButtonEvent.html":{}},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{}}}],["actionbuttonopt",{"_index":76,"title":{"interfaces/ActionButtonOptions.html":{}},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actiongroup",{"_index":82,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(opt",{"_index":255,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiongroupcomponentimpl",{"_index":84,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actiongroupev",{"_index":79,"title":{"interfaces/ActionGroupEvent.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{}}}],["actiongroupopt",{"_index":85,"title":{"interfaces/ActionGroupOptions.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionoutlet",{"_index":94,"title":{"interfaces/ActionOutlet.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutlet(act",{"_index":202,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdestroy",{"_index":152,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdirect",{"_index":130,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"coverage.html":{},"overview.html":{}}}],["actionoutletfactori",{"_index":98,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutletmodul",{"_index":258,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["actionst",{"_index":326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiontoggl",{"_index":117,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiontoggle(opt",{"_index":256,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiontogglecallback",{"_index":276,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontogglecomponentimpl",{"_index":122,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontoggleev",{"_index":274,"title":{"interfaces/ActionToggleEvent.html":{}},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actiontoggleopt",{"_index":115,"title":{"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activ",{"_index":328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actual",{"_index":386,"title":{},"body":{"index.html":{}}}],["add",{"_index":368,"title":{},"body":{"index.html":{}}}],["alias",{"_index":464,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alway",{"_index":139,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["and/or",{"_index":427,"title":{},"body":{"license.html":{}}}],["angular",{"_index":23,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["angular/anim",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":270,"title":{},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":118,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["anyact",{"_index":31,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":335,"title":{},"body":{"index.html":{}}}],["applic",{"_index":351,"title":{},"body":{"index.html":{}}}],["approach",{"_index":237,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["appropri",{"_index":365,"title":{},"body":{"index.html":{}}}],["aris",{"_index":456,"title":{},"body":{"license.html":{}}}],["array",{"_index":86,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"miscellaneous/variables.html":{}}}],["array.from",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":190,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["associ",{"_index":374,"title":{},"body":{"index.html":{},"license.html":{}}}],["attach",{"_index":136,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["author",{"_index":447,"title":{},"body":{"license.html":{}}}],["automat",{"_index":180,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["avail",{"_index":399,"title":{},"body":{"index.html":{}}}],["back",{"_index":346,"title":{},"body":{"index.html":{}}}],["between",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bind",{"_index":398,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":24,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["bootstrap",{"_index":261,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["brows",{"_index":460,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":310,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":336,"title":{},"body":{"index.html":{}}}],["button",{"_index":68,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["button.compon",{"_index":376,"title":{},"body":{"index.html":{}}}],["button.model",{"_index":120,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model.t",{"_index":62,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["button.t",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["button/act",{"_index":61,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonact",{"_index":239,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["c",{"_index":404,"title":{},"body":{"license.html":{}}}],["callback",{"_index":72,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callbackmethod",{"_index":146,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["case",{"_index":345,"title":{},"body":{"index.html":{}}}],["chang",{"_index":175,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["change/upd",{"_index":173,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["charg",{"_index":348,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":251,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkbox.compon",{"_index":389,"title":{},"body":{"index.html":{}}}],["child",{"_index":46,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["children",{"_index":88,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":450,"title":{},"body":{"license.html":{}}}],["class",{"_index":35,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":236,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["clear",{"_index":225,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["cluster_actionoutletmodul",{"_index":262,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_declar",{"_index":263,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_export",{"_index":264,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["code",{"_index":235,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["com",{"_index":54,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["come",{"_index":66,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["command",{"_index":361,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":269,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["compil",{"_index":135,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["compon",{"_index":12,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["component'",{"_index":169,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactori",{"_index":213,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactoryresolv",{"_index":157,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentref",{"_index":200,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["condit",{"_index":433,"title":{},"body":{"license.html":{}}}],["connect",{"_index":457,"title":{},"body":{"license.html":{}}}],["const",{"_index":210,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["constructor(priv",{"_index":222,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["constructor(viewcontainerref",{"_index":155,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["contain",{"_index":87,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["contract",{"_index":453,"title":{},"body":{"license.html":{}}}],["copi",{"_index":414,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":403,"title":{},"body":{"license.html":{}}}],["core",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":277,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":92,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["createbutton",{"_index":100,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createbutton(opt",{"_index":103,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createcompon",{"_index":165,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["creategroup",{"_index":101,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creategroup(opt",{"_index":112,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggl",{"_index":102,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle(opt",{"_index":114,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creation",{"_index":163,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["current",{"_index":194,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["custom",{"_index":400,"title":{},"body":{"index.html":{}}}],["damag",{"_index":451,"title":{},"body":{"license.html":{}}}],["deal",{"_index":416,"title":{},"body":{"license.html":{}}}],["declar",{"_index":260,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["default",{"_index":107,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default'",{"_index":383,"title":{},"body":{"index.html":{}}}],["defaultabstractopt",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultbuttonopt",{"_index":292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroupopt",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttoggleopt",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":90,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["depend",{"_index":161,"title":{"dependencies.html":{}},"body":{"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["deriv",{"_index":10,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["descend",{"_index":142,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["descript",{"_index":8,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["destroy",{"_index":179,"title":{},"body":{"directives/ActionOutletDirective.html":{},"miscellaneous/enumerations.html":{}}}],["destruct",{"_index":182,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["detect",{"_index":176,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dinam",{"_index":137,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["direct",{"_index":129,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directli",{"_index":189,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["disabl",{"_index":44,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":353,"title":{},"body":{"index.html":{}}}],["distribut",{"_index":425,"title":{},"body":{"license.html":{}}}],["document",{"_index":278,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":134,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dropdown",{"_index":93,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dynam",{"_index":311,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e.g",{"_index":97,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"index.html":{}}}],["each",{"_index":341,"title":{},"body":{"index.html":{}}}],["easi",{"_index":334,"title":{},"body":{"index.html":{}}}],["end",{"_index":347,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":325,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('illeg",{"_index":209,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["etc",{"_index":171,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["event",{"_index":45,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"license.html":{}}}],["exampl",{"_index":143,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["examplebuttoncompon",{"_index":375,"title":{},"body":{"index.html":{}}}],["examplecheckboxcompon",{"_index":388,"title":{},"body":{"index.html":{}}}],["examplecompon",{"_index":390,"title":{},"body":{"index.html":{}}}],["examplegroupcompon",{"_index":377,"title":{},"body":{"index.html":{}}}],["examplemodul",{"_index":370,"title":{},"body":{"index.html":{}}}],["exampletogglecompon",{"_index":379,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"overview.html":{}}}],["expos",{"_index":221,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["express",{"_index":441,"title":{},"body":{"license.html":{}}}],["extend",{"_index":15,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["factori",{"_index":96,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["fals",{"_index":181,"title":{},"body":{"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":192,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"license.html":{}}}],["fire",{"_index":49,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fire$.subscribe(callbackmethod",{"_index":243,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["first",{"_index":78,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["fit",{"_index":444,"title":{},"body":{"license.html":{}}}],["fli",{"_index":138,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["follow",{"_index":432,"title":{},"body":{"license.html":{}}}],["forc",{"_index":191,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["free",{"_index":411,"title":{},"body":{"license.html":{}}}],["front",{"_index":350,"title":{},"body":{"index.html":{}}}],["function",{"_index":233,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["furnish",{"_index":430,"title":{},"body":{"license.html":{}}}],["get",{"_index":330,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getactionoutlet",{"_index":195,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttyp",{"_index":151,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype(act",{"_index":187,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getter",{"_index":197,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["goal",{"_index":333,"title":{},"body":{"index.html":{}}}],["grant",{"_index":410,"title":{},"body":{"license.html":{}}}],["group",{"_index":83,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["group.compon",{"_index":378,"title":{},"body":{"index.html":{}}}],["group.model",{"_index":121,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model.t",{"_index":81,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["group.t",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/act",{"_index":80,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["handl",{"_index":183,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["happen",{"_index":342,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":409,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":19,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["hide",{"_index":29,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["holder",{"_index":448,"title":{},"body":{"license.html":{}}}],["hook",{"_index":224,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["hostbind",{"_index":25,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["html",{"_index":201,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["icon",{"_index":41,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifi",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":13,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["impli",{"_index":442,"title":{},"body":{"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["inact",{"_index":329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["includ",{"_index":419,"title":{},"body":{"license.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["initi",{"_index":37,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["inject",{"_index":162,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"overview.html":{}}}],["injector",{"_index":158,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["injector.get(action.constructor",{"_index":230,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["input",{"_index":22,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["instal",{"_index":356,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":21,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["instanceof",{"_index":207,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instead",{"_index":238,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"overview.html":{}}}],["intern",{"_index":198,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["invok",{"_index":160,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["it'",{"_index":75,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["js",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":352,"title":{},"body":{"index.html":{}}}],["keep",{"_index":234,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["kind",{"_index":440,"title":{},"body":{"license.html":{}}}],["klemen",{"_index":406,"title":{},"body":{"license.html":{}}}],["legend",{"_index":259,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["liabil",{"_index":452,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":449,"title":{},"body":{"license.html":{}}}],["licens",{"_index":401,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":420,"title":{},"body":{"license.html":{}}}],["line",{"_index":362,"title":{},"body":{"index.html":{}}}],["manual",{"_index":184,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["match",{"_index":59,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":337,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":443,"title":{},"body":{"license.html":{}}}],["merg",{"_index":423,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":149,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["method",{"_index":99,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["miscellan",{"_index":324,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":402,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":422,"title":{},"body":{"license.html":{}}}],["modul",{"_index":257,"title":{"modules/ActionOutletModule.html":{},"modules.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["module,but",{"_index":385,"title":{},"body":{"index.html":{}}}],["modulewithprovid",{"_index":272,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["more",{"_index":56,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["name",{"_index":109,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["natur",{"_index":344,"title":{},"body":{"index.html":{}}}],["never",{"_index":220,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["new",{"_index":106,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":71,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":357,"title":{},"body":{"index.html":{}}}],["ngactionoutlet",{"_index":332,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":271,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":223,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["ngoninit",{"_index":394,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":446,"title":{},"body":{"license.html":{}}}],["notic",{"_index":435,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":340,"title":{},"body":{"index.html":{}}}],["npm",{"_index":359,"title":{},"body":{"index.html":{}}}],["observ",{"_index":50,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["obtain",{"_index":413,"title":{},"body":{"license.html":{}}}],["on",{"_index":141,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["onc",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["ondestroy",{"_index":148,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["oninit",{"_index":393,"title":{},"body":{"index.html":{}}}],["option",{"_index":34,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":27,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["oserv",{"_index":64,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["oslaj",{"_index":407,"title":{},"body":{"license.html":{}}}],["otherwis",{"_index":455,"title":{},"body":{"license.html":{}}}],["out",{"_index":267,"title":{},"body":{"modules/ActionOutletModule.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":358,"title":{},"body":{"index.html":{}}}],["outlet.direct",{"_index":273,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.directive.t",{"_index":131,"title":{},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:102",{"_index":159,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:137",{"_index":188,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:58",{"_index":177,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:83",{"_index":196,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:91",{"_index":186,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.model",{"_index":32,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["outlet.model.t",{"_index":95,"title":{},"body":{"interfaces/ActionOutlet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["outlet.model.ts:28",{"_index":104,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:35",{"_index":113,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:42",{"_index":116,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.module.t",{"_index":268,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.service.t",{"_index":231,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["outlet.service.ts:51",{"_index":244,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:67",{"_index":247,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:83",{"_index":249,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet/cor",{"_index":367,"title":{},"body":{"index.html":{}}}],["over",{"_index":349,"title":{},"body":{"index.html":{}}}],["overrid",{"_index":111,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["overriden",{"_index":55,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["overview",{"_index":461,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":303,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":128,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["paramet",{"_index":108,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["particular",{"_index":343,"title":{},"body":{"index.html":{},"license.html":{}}}],["permiss",{"_index":408,"title":{},"body":{"license.html":{}}}],["permit",{"_index":429,"title":{},"body":{"license.html":{}}}],["person",{"_index":412,"title":{},"body":{"license.html":{}}}],["point",{"_index":373,"title":{},"body":{"index.html":{}}}],["portion",{"_index":438,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":339,"title":{},"body":{"index.html":{}}}],["privat",{"_index":219,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["project",{"_index":366,"title":{},"body":{"index.html":{}}}],["projects/.../act",{"_index":327,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/act",{"_index":5,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":193,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["properti",{"_index":18,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["provid",{"_index":48,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":252,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["publish",{"_index":424,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":445,"title":{},"body":{"license.html":{}}}],["readonli",{"_index":39,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["readonlyarray",{"_index":89,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["receiv",{"_index":65,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["refer",{"_index":218,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["regist",{"_index":77,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["render",{"_index":133,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["rendering.provid",{"_index":372,"title":{},"body":{"index.html":{}}}],["reset",{"_index":266,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["resolv",{"_index":166,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["resolvecomponentfactori",{"_index":167,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["restrict",{"_index":418,"title":{},"body":{"license.html":{}}}],["result",{"_index":58,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":105,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":421,"title":{},"body":{"license.html":{}}}],["root",{"_index":253,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["runtim",{"_index":338,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":384,"title":{},"body":{"index.html":{}}}],["selector",{"_index":150,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["sell",{"_index":428,"title":{},"body":{"license.html":{}}}],["servic",{"_index":232,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["set",{"_index":172,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["set(children",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setactionoutlet(act",{"_index":199,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["seticon('icon",{"_index":242,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["setter",{"_index":168,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["settitle('act",{"_index":241,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["settitle('exampl",{"_index":396,"title":{},"body":{"index.html":{}}}],["shall",{"_index":436,"title":{},"body":{"license.html":{}}}],["share",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shere",{"_index":16,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shorter",{"_index":126,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":28,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["softwar",{"_index":415,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["specif",{"_index":57,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["start",{"_index":331,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":43,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["statement",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":354,"title":{},"body":{"index.html":{}}}],["string",{"_index":40,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["structur",{"_index":132,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["subject",{"_index":431,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":426,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":51,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscript",{"_index":70,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["substanti",{"_index":437,"title":{},"body":{"license.html":{}}}],["support",{"_index":458,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":459,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":147,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["test",{"_index":246,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["tha",{"_index":53,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["this.act",{"_index":203,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.activ",{"_index":217,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.destroy",{"_index":228,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.getpar",{"_index":227,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutlet.createbutton",{"_index":245,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.creategroup",{"_index":248,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["this.actionoutlet.createtoggl",{"_index":250,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutletdestroy",{"_index":226,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutletfactory.createbutton",{"_index":240,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(compon",{"_index":214,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref",{"_index":204,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref.instance.act",{"_index":216,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.getcomponenttype(this.act",{"_index":211,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.group",{"_index":145,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["this.group.createtoggl",{"_index":395,"title":{},"body":{"index.html":{}}}],["this.injector",{"_index":212,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.clear",{"_index":205,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.createcomponent(componentfactori",{"_index":215,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["throw",{"_index":208,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["titl",{"_index":38,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toggl",{"_index":125,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["toggle.compon",{"_index":380,"title":{},"body":{"index.html":{}}}],["toggle.model",{"_index":124,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["toggle.model.t",{"_index":275,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["toggle.t",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle/act",{"_index":123,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":364,"title":{},"body":{"index.html":{}}}],["tool.choos",{"_index":363,"title":{},"body":{"index.html":{}}}],["tort",{"_index":454,"title":{},"body":{"license.html":{}}}],["travi",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":185,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":463,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":144,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["undefin",{"_index":206,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["underli",{"_index":178,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["uniqu",{"_index":296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":26,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["usevalu",{"_index":381,"title":{},"body":{"index.html":{}}}],["valu",{"_index":47,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":287,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":164,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["view",{"_index":170,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["viewcontainerref",{"_index":156,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["visibl",{"_index":42,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":74,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["warranti",{"_index":439,"title":{},"body":{"license.html":{}}}],["way",{"_index":127,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["whether",{"_index":91,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"license.html":{}}}],["wish",{"_index":387,"title":{},"body":{"index.html":{}}}],["without",{"_index":417,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":360,"title":{},"body":{"index.html":{}}}],["ye",{"_index":110,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["zone.j",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":265,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionAbstractComponentImpl.html":{"url":"interfaces/ActionAbstractComponentImpl.html","title":"interface - ActionAbstractComponentImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractComponentImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract interface that all derived action component implementation types should extend\nAll components will shere this interface after implementing derived component implementation types\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        hidden\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     Action\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Action\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The derived action instance, as Input in angular component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hidden property, that HostBinding should be used for, in order to show or hide action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n    /**\n     * Hidden property, that `HostBinding` should be used for, in order to show or hide action\n     */\n    hidden: boolean; // @HostBinding\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractEvent.html":{"url":"interfaces/ActionAbstractEvent.html","title":"interface - ActionAbstractEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that every event of child actions should extend from\nUsed as a value provided to fire$ observable subscribers\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     AnyAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AnyAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action instance, tha this event is comming from\nShould be overriden by derived interface with more specific action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n    /**\n     * Hidden property, that `HostBinding` should be used for, in order to show or hide action\n     */\n    hidden: boolean; // @HostBinding\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractOptions.html":{"url":"interfaces/ActionAbstractOptions.html","title":"interface - ActionAbstractOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract action options, extended by all options of every derived action class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action disabled state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action visibility state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n    /**\n     * Hidden property, that `HostBinding` should be used for, in order to show or hide action\n     */\n    hidden: boolean; // @HostBinding\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonEvent.html":{"url":"interfaces/ActionButtonEvent.html","title":"interface - ActionButtonEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionButton fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionButton\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionButton\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionButton instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonOptions.html":{"url":"interfaces/ActionButtonOptions.html","title":"interface - ActionButtonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     ActionButtonCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionButtonCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupEvent.html":{"url":"interfaces/ActionGroupEvent.html","title":"interface - ActionGroupEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionGroup fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionGroup instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupOptions.html":{"url":"interfaces/ActionGroupOptions.html","title":"interface - ActionGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionGroup specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        dropdown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array, containing children actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdown\n                                    \n                                \n                                \n                                    \n                                        dropdown:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean defining whether group is initially created as dropdown\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionOutlet.html":{"url":"interfaces/ActionOutlet.html","title":"interface - ActionOutlet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionOutlet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutlet interface is implemented by all factory classes.\ne.g. ActionOutletFactory and ActionGroup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createButton\n                                \n                                \n                                    createGroup\n                                \n                                \n                                    createToggle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.model.ts:28\n                            \n                        \n\n\n                \n                    \n                            When implemented should create and return a new instance of ActionButton with default options and component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionButtonOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default component for ActionButton\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionButton\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.model.ts:35\n                            \n                        \n\n\n                \n                    \n                            When implemented should create and return a new instance of ActionGroup with default options and component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionGroupOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default options for ActionGroup\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default component for ActionGroup\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.model.ts:42\n                            \n                        \n\n\n                \n                    \n                            When implemented should create and return a new instance of ActionToggle with default options and component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionToggleOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Should override the default component for ActionToggle\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionToggle\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractEvent, ActionAbstractOptions } from './action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\n\n/**\n * AnyAction type is a shorter way to define the default abstract action type\n */\nexport type AnyAction = ActionAbstract;\n\n/**\n * ActionOutlet interface is implemented by all factory classes.\n *\n * e.g. `ActionOutletFactory` and `ActionGroup`\n */\nexport interface ActionOutlet {\n    /**\n     * When implemented should create and return a new instance of `ActionButton` with default options and component\n     * @param options Should override the default options for `ActionButton`\n     * @param component Should override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton;\n\n    /**\n     * When implemented should create and return a new instance of `ActionGroup` with default options and component\n     * @param options Should override the default options for `ActionGroup`\n     * @param component Should override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup;\n\n    /**\n     * When implemented should create and return a new instance of `ActionToggle` with default options and component\n     * @param options Should override the default options for `ActionToggle`\n     * @param component Should override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ActionOutletDirective.html":{"url":"directives/ActionOutletDirective.html","title":"directive - ActionOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ActionOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive used for rendering actions to the DOM.\nIt compiles and attaches the action components dinamically on the fly\nThe @Input is always an action derived from AbstractAction class, e.g.:\n\nActionButton: will render one button action\nActionGroup: will render one group action and all descendant actions\nActionToggle: will render one toggle action\n\nExample\nTypeScript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n *Template\n * \n *\n            \n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [actionOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionOutlet\n                            \n                            \n                                actionOutletDestroy\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actionOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-outlet.directive.ts:102\n                            \n                        \n\n                \n                    \n                            Invoked by Angular with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for Component creation via .createComponent()\n\n                                                        \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to resolve component factory via .resolveComponentFactory()\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                    \n                        Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionOutletDestroy\n                    \n                    \n                        Defines whether underlying child action instance will be destroyed automatically\nIf false, destruction of action should be handled MANUALLY\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:91\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComponentType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComponentType(action: AnyAction, injector: Injector)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:137\n                            \n                        \n\n\n                \n                    \n                            Will return the Component type for provided action\nIf action has directly assigned Component type via constructor, then that component is forced and used\nIf action does not have directly assigned Component type via constructor, Injector is used to fetch proper Component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    AnyAction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Action to get Component for\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                        \n                                                                    Injector\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Injector from current directive instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n\n                \n                    \n                        getactionOutlet()\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:83\n                                \n                            \n                    \n                        \n                                Getter for internally used action\n\n\n                                \n                                    Returns :     AnyAction\n\n                                \n                        \n                    \n\n                \n                    \n                        setactionOutlet(action: )\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                                \n                            \n                    \n                        \n                                Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            action\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Injector,\n    Input,\n    OnDestroy,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractComponentImpl } from './action-abstract/action-abstract.model';\nimport { AnyAction } from './action-outlet.model';\n\n/**\n * Structural directive used for rendering actions to the DOM.\n * It compiles and attaches the action components **dinamically** on the fly\n *\n * The `@Input` is always an action derived from `AbstractAction` class, e.g.:\n * - `ActionButton`: will render one button action\n * - `ActionGroup`: will render one group action and all descendant actions\n * - `ActionToggle`: will render one toggle action\n *\n * ## Example\n *\n * **TypeScript**\n * ```typescript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n * ```\n *\n * **Template**\n * ```html\n * \n * ```\n */\n\n@Directive({\n    selector: '[actionOutlet]',\n})\nexport class ActionOutletDirective implements OnDestroy {\n    /**\n     * Action setter, providing action, to be rendered in the component's view container.\n     * *e.g. `ActionButton`, `ActionGroup`, etc.*\n     *\n     * On set, it will:\n     * - **Compile** and render a `Component` **dinamically** for provided `@Input` action\n     * - **Change/Update** the `Component` accordingly to the change detection\n     */\n    @Input() set actionOutlet(action: AnyAction) {\n        this.action = action;\n\n        if (this.componentRef) {\n            this.viewContainerRef.clear();\n            this.componentRef = undefined;\n        }\n\n        if (this.action === undefined) {\n            return;\n        }\n\n        if (this.action instanceof ActionAbstract === false) {\n            throw new Error('Illegal state: \"actionOutlet\" should be instance of AbstractAction');\n        }\n\n        const component = this.getComponentType(this.action, this.injector);\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n        this.componentRef.instance.action = this.action.activate();\n    }\n\n    /**\n     * Getter for **internally** used action\n     */\n    get actionOutlet(): AnyAction {\n        return this.action;\n    }\n\n    /**\n     * Defines whether underlying child action instance will be destroyed automatically\n     * If `false`, destruction of action should be handled **MANUALLY**\n     */\n    @Input() actionOutletDestroy = true;\n\n    /**\n     * `Component` reference to the component, used by rendered action\n     */\n    private componentRef: ComponentRef;\n\n    /**\n     * Action instance, used **internally** by the directive\n     * Should **never** be directly exposed\n     */\n    private action: AnyAction;\n\n    /**\n     * Invoked by Angular with dependency injection\n     *\n     * @param viewContainerRef Used for Component creation via `.createComponent()`\n     * @param componentFactoryResolver Used to resolve component factory via `.resolveComponentFactory()`\n     */\n    constructor(private viewContainerRef: ViewContainerRef,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private injector: Injector) { }\n\n    /**\n     * Angular `ngOnDestroy` hook will:\n     * - **Destroy** provided @Input action\n     * - **Clear** the view container\n     */\n    ngOnDestroy(): void {\n        if (this.actionOutletDestroy && this.action && !this.action.getParent()) {\n            this.action.destroy();\n        }\n\n        this.viewContainerRef.clear();\n        this.action = undefined;\n        this.componentRef = undefined;\n    }\n\n    /**\n     * Will return the `Component` type for provided action\n     * If action **has** directly assigned `Component` type via `constructor`, then that component is **forced** and used\n     * If action **does not have** directly assigned `Component` type via `constructor`, `Injector` is used to fetch proper `Component`\n     *\n     * @param action Action to get `Component` for\n     * @param injector `Injector` from current directive instance\n     */\n    getComponentType(action: AnyAction, injector: Injector): Type {\n        return action.getForcedComponent() || >injector.get(action.constructor);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionOutletFactory.html":{"url":"injectables/ActionOutletFactory.html","title":"injectable - ActionOutletFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActionOutletFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.service.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutletFactory is a service providing functional way to create the actions.\nIn order to keep the code clean, use only one approach.\nExample\nInstead of\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n *Can do\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n *\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createButton\n                            \n                            \n                                createGroup\n                            \n                            \n                                createToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createButton\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Will create and return a new instance of ActionButton with default options and component\nExample:\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionButtonOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default component for ActionButton\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionButton\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Will create and return a new instance of ActionGroup with default options and component\nExample:\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionGroupOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default options for ActionGroup\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default component for ActionGroup\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionGroup\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Will create and return a new instance of ActionToggle with default options and component\nExample:\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    ActionToggleOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Override the default component for ActionToggle\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ActionToggle\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\n\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionOutlet } from './action-outlet.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\n\n/**\n * ActionOutletFactory is a service providing functional way to create the actions.\n * In order to keep the code clean, use only one approach.\n *\n * ## Example\n *\n * **Instead of**\n * ```typescript\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n * ```\n *\n * **Can do**\n * ```typescript\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n * ```\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionOutletFactory implements ActionOutlet {\n    /**\n     * Will create and return a new instance of `ActionButton` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     * ```\n     *\n     * @method createButton\n     * @param options Override the default options for `ActionButton`\n     * @param component Override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton {\n        return new ActionButton(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionGroup` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     * ```\n     *\n     * @method createGroup\n     * @param options Override the default options for `ActionGroup`\n     * @param component Override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup {\n        return new ActionGroup(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionToggle` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     * ```\n     *\n     * @method createToggle\n     * @param options Override the default options for `ActionToggle`\n     * @param component Override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle {\n        return new ActionToggle(options, component);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionOutletModule.html":{"url":"modules/ActionOutletModule.html","title":"module - ActionOutletModule","body":"\n                   \n\n\n\n\n  Modules\n  ActionOutletModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ActionOutletDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ActionOutletDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule, Type, ModuleWithProviders } from '@angular/core';\n\nimport { ActionOutletDirective } from './action-outlet.directive';\n\n@NgModule({\n  declarations: [ActionOutletDirective],\n  imports: [CommonModule],\n  exports: [ActionOutletDirective]\n})\nexport class ActionOutletModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleEvent.html":{"url":"interfaces/ActionToggleEvent.html","title":"interface - ActionToggleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionToggle fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionToggle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionToggle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionToggle instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    New checked state of the action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleOptions.html":{"url":"interfaces/ActionToggleOptions.html","title":"interface - ActionToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                    ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:     ActionToggleCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionToggleCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial checked state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            \n                interface\n            \n            \n                ActionAbstractComponentImpl\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            \n                interface\n            \n            \n                ActionAbstractEvent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            \n                interface\n            \n            \n                ActionAbstractOptions\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            \n                class\n            \n            \n                ActionAbstract\n            \n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            \n                variable\n            \n            \n                defaultAbstractOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            \n                interface\n            \n            \n                ActionButtonEvent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            \n                interface\n            \n            \n                ActionButtonOptions\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            \n                class\n            \n            \n                ActionButton\n            \n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            \n                variable\n            \n            \n                defaultButtonOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            \n                interface\n            \n            \n                ActionGroupEvent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            \n                interface\n            \n            \n                ActionGroupOptions\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            \n                class\n            \n            \n                ActionGroup\n            \n            \n                100 %\n                (58/58)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            \n                variable\n            \n            \n                defaultGroupOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            \n                variable\n            \n            \n                unique\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.directive.ts\n            \n            \n                directive\n            \n            \n                ActionOutletDirective\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.model.ts\n            \n            \n                interface\n            \n            \n                ActionOutlet\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.service.ts\n            \n            \n                injectable\n            \n            \n                ActionOutletFactory\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            \n                interface\n            \n            \n                ActionToggleEvent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            \n                interface\n            \n            \n                ActionToggleOptions\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            \n                class\n            \n            \n                ActionToggle\n            \n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            \n                variable\n            \n            \n                defaultToggleOptions\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.0\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.3.3\n        \n            travis-deploy-once : ^5.0.9\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionState   (projects/.../action-abstract.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionState\n                    \n                \n                    \n                        \n                            The state of the action\nCan be Active, Inactive or Destroyed\n\n                        \n                    \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                 Inactive\n                            \n                        \n                        \n                            \n                                 Destroyed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\nNgActionOutlet\nThe goal of ActionOutlet is to provide an easy API to build dynamic menus on runtime and have the possibility to get notified for each and every change, that happens to any particular action in the menu (e.g. Title change, icon change, disabled state, ...).\nThe most natural use case is when back-end is in charge over the visibility of actions and menus of the front-end application (e.g. front-end receives JSON what buttons, dropdowns, etc. to display).\nGetting started\nStep 1: Install ng-action-outlet\nYou can use either npm or yarn command-line tool.Choose the tool that is appropriate for your project.\nNPM\nnpm install @ng-action-outlet/core\nYARN\nyarn add @ng-action-outlet/core\nStep 2: Import ActionOutletModule\nImport Action Outlet NgModule to your Angular module\nimport { ActionOutletModule } from '@ng-action-outlet/core';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  ...\n})\nexport class ExampleModule { }Step 3: Define what component to use with what action\nUse providers to set default components for each action to be used for rendering.Provide action class and use value pointing to your component class,\nso that action outlet can associate component to provided action.\nimport { ActionOutletModule, ActionButton, ActionGroup, ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleButtonComponent } from './example-button.component';\nimport { ExampleGroupComponent } from './example-group.component';\nimport { ExampleToggleComponent } from './example-toggle.component';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  providers: [{\n      provide: ActionButton,\n      useValue: ExampleButtonComponent\n  }, {\n      provide: ActionGroup,\n      useValue: ExampleGroupComponent\n  }, {\n      provide: ActionToggle,\n      useValue: ExampleToggleComponent\n  }]\n  ...\n})\nexport class ExampleModule { }Step 4: Override default's in your component\nIn order to override your default settings, do the same as initially in a module,but only for actions that you actually wish to change.\nimport { ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleCheckboxComponent } from './example-checkbox.component';\n\n@Component({\n  ...\n  providers: [{\n      provide: ActionToggle,\n      useValue: ExampleCheckboxComponent\n  }]\n  ...\n})\nexport class ExampleComponent { }Step 5: Create action instances\nCreate actions in a component class so that they can be accessed from the template.\nimport { ActionOutletFactory } from '@ng-action-outlet/core';\n\n@Component(...)\nexport class ExampleComponent implements OnInit {\n    ...\n    group: ActionGroup;\n\n    constructor(private actionOutlet: ActionOutletFactory) { }\n\n    ngOnInit() {\n        this.group = this.actionOutlet.createGroup();\n        this.group.createToggle()\n          .setTitle('Example title')\n          .check();\n    }\n    ...\n}Step 6: Render the actions\nBind created actions to actionOutlet renderer directive.\nAvailable actions\n\nActionButton\nActionGroup\nActionToggle\n\nIn order to create custom action class, refer to ActionAbstract class.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Klemen Oslaj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionOutletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionButtonCallback   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionButtonComponentImpl   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionGroupComponentImpl   (projects/.../action-group.model.ts)\n                        \n                        \n                            ActionToggleCallback   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            ActionToggleComponentImpl   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            AnyAction   (projects/.../action-outlet.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-button/action-button.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionButtonCallback\n                    \n                \n                    \n                        \n                            Subscription next callback for ActionButton fire$\n\n                        \n                    \n                \n                    \n                        ActionButtonCallback:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ActionButtonComponentImpl\n                    \n                \n                    \n                        \n                            Type that components used by ActionButton should implement\n\n                        \n                    \n                \n                    \n                        ActionButtonComponentImpl:     ActionAbstractComponentImpl\n\n                    \n                \n            \n        \n\n    projects/core/src/lib/action-group/action-group.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionGroupComponentImpl\n                    \n                \n                    \n                        \n                            Type that components used by ActionGroup should implement\n\n                        \n                    \n                \n                    \n                        ActionGroupComponentImpl:     ActionAbstractComponentImpl\n\n                    \n                \n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionToggleCallback\n                    \n                \n                    \n                        \n                            Subscription next callback for ActionToggle fire$\n\n                        \n                    \n                \n                    \n                        ActionToggleCallback:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ActionToggleComponentImpl\n                    \n                \n                    \n                        \n                            Type that components used by ActionToggle should implement\n\n                        \n                    \n                \n                    \n                        ActionToggleComponentImpl:     ActionAbstractComponentImpl\n\n                    \n                \n            \n        \n\n    projects/core/src/lib/action-outlet.model.ts\n    \n        \n            \n                \n                    \n                        \n                        AnyAction\n                    \n                \n                    \n                        \n                            AnyAction type is a shorter way to define the default abstract action type\n\n                        \n                    \n                \n                    \n                        AnyAction:     ActionAbstract\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAbstractOptions   (projects/.../action-abstract.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-button.ts)\n                        \n                        \n                            defaultGroupOptions   (projects/.../action-group.ts)\n                        \n                        \n                            defaultToggleOptions   (projects/.../action-toggle.ts)\n                        \n                        \n                            unique   (projects/.../action-group.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAbstractOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultAbstractOptions:     ActionAbstractOptions\n\n                    \n                \n                    \n                        \n                            Type :     ActionAbstractOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionAbstract - shared between all actions\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-button/action-button.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultButtonOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultButtonOptions:     ActionButtonOptions\n\n                    \n                \n                    \n                        \n                            Type :     ActionButtonOptions\n\n                        \n                    \n                    \n                        \n                            Default value : { }\n                        \n                    \n\n                \n                    \n                        Default options for ActionButton\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-group/action-group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGroupOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultGroupOptions:     ActionGroupOptions\n\n                    \n                \n                    \n                        \n                            Type :     ActionGroupOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    children: [],\n    dropdown: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionGroup\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unique\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unique:     \n\n                    \n                \n                    \n                        \n                            Default value : (children: AnyAction[]) => Array.from(\n    new Set(children)\n)\n                        \n                    \n\n                \n                    \n                        Will return a unique array of actions\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultToggleOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultToggleOptions:     ActionToggleOptions\n\n                    \n                \n                    \n                        \n                            Type :     ActionToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    checked: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionToggle\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
